{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/upgrades.ts"],"sourcesContent":["\nimport type { UpgradeDefinition } from \"@/lib/types\";\nimport { MousePointerClick, Server, Zap, Brain, Rocket, Gem, Star, Hourglass, Atom, Layers, Lightbulb, Factory } from \"lucide-react\";\n\nexport const AVAILABLE_UPGRADES: UpgradeDefinition[] = [\n {\n    id: \"basic_clicker\",\n    name: \"Basic Clicker\",\n    description: \"A simple script that clicks for you. Every little bit helps!\",\n    icon: MousePointerClick,\n    baseCost: 10,\n    ppsPerUnit: 0.1,\n },\n {\n    id: \"auto_harvester\",\n    name: \"Auto Harvester\",\n    description: \"Automatically gathers small amounts of points.\",\n    icon: Server,\n    baseCost: 100,\n    ppsPerUnit: 1,\n },\n {\n    id: \"point_synthesizer\",\n    name: \"Point Synthesizer\",\n    description: \"Generates points at a steady rate through advanced technology.\",\n    icon: Zap,\n    baseCost: 1000,\n    ppsPerUnit: 8,\n },\n {\n    id: \"neural_network\",\n    name: \"Neural Network\",\n    description: \"A complex AI that optimizes point generation strategies.\",\n    icon: Brain,\n    baseCost: 10000,\n    ppsPerUnit: 47,\n },\n {\n    id: \"quantum_computer\",\n    name: \"Quantum Computer\",\n    description: \"Performs calculations at unimaginable speeds to create points.\",\n    icon: Rocket,\n    baseCost: 120000,\n    ppsPerUnit: 260,\n  },\n  {\n    id: \"reality_bender\",\n    name: \"Reality Bender\",\n    description: \"Manipulates the fabric of spacetime to will points into existence.\",\n    icon: Gem,\n    baseCost: 1500000, // 1.5M\n    ppsPerUnit: 1400,\n  },\n  {\n    id: \"cosmic_forge\",\n    name: \"Cosmic Forge\",\n    description: \"Harnesses stellar energy to materialize vast quantities of points.\",\n    icon: Star,\n    baseCost: 25000000, // 25M\n    ppsPerUnit: 7500,\n  },\n  {\n    id: \"chroniton_field\",\n    name: \"Chroniton Field\",\n    description: \"Bends time itself to accelerate point accumulation across dimensions.\",\n    icon: Hourglass,\n    baseCost: 300000000, // 300M\n    ppsPerUnit: 50000,\n  },\n  {\n    id: \"singularity_engine\",\n    name: \"Singularity Engine\",\n    description: \"Taps into a micro-singularity for near-infinite point generation.\",\n    icon: Atom,\n    baseCost: 5000000000, // 5B\n    ppsPerUnit: 300000,\n  },\n  {\n    id: \"idea_incubator\",\n    name: \"Idea Incubator\",\n    description: \"Cultivates raw thoughts into tangible point-generating concepts.\",\n    icon: Lightbulb,\n    baseCost: 75000000000, // 75B\n    ppsPerUnit: 2000000, // 2M\n  },\n  {\n    id: \"dream_weaver\",\n    name: \"Dream Weaver\",\n    description: \"Manifests points directly from the collective unconscious.\",\n    icon: Layers,\n    baseCost: 1000000000000, // 1T\n    ppsPerUnit: 15000000, // 15M\n  },\n  {\n    id: \"point_fabricator\",\n    name: \"Point Fabricator Prime\",\n    description: \"A massive, automated factory dedicated to point production.\",\n    icon: Factory,\n    baseCost: 15000000000000, // 15T\n    ppsPerUnit: 100000000, // 100M\n  }\n];\n\n// quantity is the number of this specific upgrade type ALREADY PURCHASED\nexport const calculateExponentialUpgradeCost = (baseCost: number, quantity: number): number => {\n return baseCost * Math.pow(1.15, quantity);\n};\n\nexport const calculateTotalCostForQuantity = (\n  baseCost: number,\n  currentOwned: number,\n  quantityToBuy: number\n): number => {\n  let totalCost = 0;\n  for (let i = 0; i < quantityToBuy; i++) {\n    totalCost += calculateExponentialUpgradeCost(baseCost, currentOwned + i);\n  }\n  return totalCost;\n};\n\nexport const calculateMaxAffordable = (\n  baseCost: number,\n  currentOwned: number,\n  currentPoints: number\n): { quantity: number; totalCost: number } => {\n  let quantity = 0;\n  let totalCost = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const nextCost = calculateExponentialUpgradeCost(baseCost, currentOwned + quantity);\n    if (currentPoints >= totalCost + nextCost) {\n      totalCost += nextCost;\n      quantity++;\n    } else {\n      break;\n    }\n    // Safety break for very low costs / high points to prevent infinite loops in extreme scenarios\n    if (quantity > 1000000) break; \n  }\n  return { quantity, totalCost };\n};\n"],"names":[],"mappings":";;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEO,MAAM,qBAA0C;IACtD;QACG,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,oOAAA,CAAA,oBAAiB;QACvB,UAAU;QACV,YAAY;IACf;IACA;QACG,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,UAAU;QACV,YAAY;IACf;IACA;QACG,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,gMAAA,CAAA,MAAG;QACT,UAAU;QACV,YAAY;IACf;IACA;QACG,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,oMAAA,CAAA,QAAK;QACX,UAAU;QACV,YAAY;IACf;IACA;QACG,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,gMAAA,CAAA,MAAG;QACT,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kMAAA,CAAA,OAAI;QACV,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,4MAAA,CAAA,YAAS;QACf,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kMAAA,CAAA,OAAI;QACV,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,4MAAA,CAAA,YAAS;QACf,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,UAAU;QACV,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,wMAAA,CAAA,UAAO;QACb,UAAU;QACV,YAAY;IACd;CACD;AAGM,MAAM,kCAAkC,CAAC,UAAkB;IACjE,OAAO,WAAW,KAAK,GAAG,CAAC,MAAM;AAClC;AAEO,MAAM,gCAAgC,CAC3C,UACA,cACA;IAEA,IAAI,YAAY;IAChB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,IAAK;QACtC,aAAa,gCAAgC,UAAU,eAAe;IACxE;IACA,OAAO;AACT;AAEO,MAAM,yBAAyB,CACpC,UACA,cACA;IAEA,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,iDAAiD;IACjD,MAAO,KAAM;QACX,MAAM,WAAW,gCAAgC,UAAU,eAAe;QAC1E,IAAI,iBAAiB,YAAY,UAAU;YACzC,aAAa;YACb;QACF,OAAO;YACL;QACF;QACA,+FAA+F;QAC/F,IAAI,WAAW,SAAS;IAC1B;IACA,OAAO;QAAE;QAAU;IAAU;AAC/B","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/items.ts"],"sourcesContent":["\nimport type { ItemDefinition } from \"@/lib/types\";\nimport { Gift, Zap, ShieldCheck, CoffeeIcon, TrendingUp, TrendingDown } from \"lucide-react\";\n\nexport const AVAILABLE_ITEMS: ItemDefinition[] = [\n  {\n    id: \"quick_points\",\n    name: \"Quick Points Grant\",\n    description: \"A small grant to boost your points instantly.\",\n    icon: Gift,\n    effect: {\n      type: \"INSTANT_POINTS\",\n      value: 150,\n    },\n  },\n  {\n    id: \"pps_boost_coffee\",\n    name: \"PPS Boost Coffee\",\n    description: \"Boosts all PPS by 20% for 30 seconds.\",\n    icon: CoffeeIcon,\n    effect: {\n      type: \"PPS_MULTIPLIER\",\n      value: 1.2, // 20% increase\n      durationSeconds: 30,\n    },\n  },\n   {\n    id: \"market_frenzy\",\n    name: \"Market Frenzy Elixir\",\n    description: \"Temporarily doubles PPS from all sources for 20 seconds.\",\n    icon: TrendingUp,\n    effect: {\n      type: \"PPS_MULTIPLIER\",\n      value: 2.0,\n      durationSeconds: 20,\n    },\n  },\n  // Removed upkeep related items as upkeep is removed from core spec\n  // {\n  //   id: \"efficiency_seminar\",\n  //   name: \"Efficiency Seminar Pass\",\n  //   description: \"Reduces all employee upkeep by 15% for 60 seconds.\",\n  //   icon: ShieldCheck,\n  //   effect: {\n  //     type: \"UPKEEP_MULTIPLIER\",\n  //     value: 0.85,\n  //     durationSeconds: 60,\n  //   },\n  // },\n  // {\n  //   id: \"cost_cutting_expert\",\n  //   name: \"Cost-Cutting Expert Advice\",\n  //   description: \"Halves all upkeep costs for 45 seconds.\",\n  //   icon: TrendingDown,\n  //   effect: {\n  //     type: \"UPKEEP_MULTIPLIER\",\n  //     value: 0.5,\n  //     durationSeconds: 45,\n  //   },\n  // }\n];\n"],"names":[],"mappings":";;;AAEA;AAAA;AAAA;;AAEO,MAAM,kBAAoC;IAC/C;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kMAAA,CAAA,OAAI;QACV,QAAQ;YACN,MAAM;YACN,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,0MAAA,CAAA,aAAU;QAChB,QAAQ;YACN,MAAM;YACN,OAAO;YACP,iBAAiB;QACnB;IACF;IACC;QACC,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kNAAA,CAAA,aAAU;QAChB,QAAQ;YACN,MAAM;YACN,OAAO;YACP,iBAAiB;QACnB;IACF;CAwBD","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/artifices.ts"],"sourcesContent":["\nimport type { ArtificeDefinition } from \"@/lib/types\";\nimport { Gem, Award, Sparkles, Target, DollarSignIcon, Zap } from \"lucide-react\"; // Added Zap\n\nexport const AVAILABLE_ARTIFICES: ArtificeDefinition[] = [\n  {\n    id: \"eternal_growth_gem\",\n    name: \"Eternal Growth Gem\",\n    description: \"A pulsating gem that hums with untapped potential.\",\n    effectDescription: \"+5% to all Points Per Second (PPS) permanently.\",\n    icon: Gem,\n    effect: {\n      type: \"GLOBAL_PPS_MULTIPLIER\",\n      value: 1.05,\n    },\n  },\n  {\n    id: \"click_power_crystal\",\n    name: \"Crystal of a Thousand Clicks\",\n    description: \"Empowers each of your manual clicks.\",\n    effectDescription: \"+10% to Points Per Click permanently.\",\n    icon: Zap, // Using Zap for click power\n    effect: {\n      type: \"GLOBAL_CLICK_POWER_MULTIPLIER\",\n      value: 1.10,\n    },\n  },\n  {\n    id: \"harvester_efficiency_core\",\n    name: \"Efficiency Core (Auto Harvester)\",\n    description: \"Boosts the effectiveness of your Auto Harvesters.\",\n    effectDescription: \"+10% PPS from Auto Harvesters permanently.\",\n    icon: Sparkles,\n    effect: {\n      type: \"UPGRADE_SPECIFIC_PPS_MULTIPLIER\",\n      upgradeId: \"auto_harvester\",\n      value: 1.10,\n    },\n  },\n  {\n    id: \"golden_contract\",\n    name: \"Golden Contract\",\n    description: \"Makes acquiring new upgrades slightly more affordable.\",\n    effectDescription: \"-5% to base cost for all upgrades permanently.\",\n    icon: Award, // Changed from DollarSignIcon\n    effect: {\n      type: \"ALL_UPGRADES_COST_MULTIPLIER\",\n      value: 0.95,\n    },\n  },\n  {\n    id: \"quantum_discount_module\",\n    name: \"Discount Module (Quantum Computer)\",\n    description: \"Reduces the cost of Quantum Computers.\",\n    effectDescription: \"-10% to base cost for Quantum Computers permanently.\",\n    icon: Target, // Using Target as a generic one\n    effect: {\n      type: \"SPECIFIC_UPGRADE_COST_MULTIPLIER\",\n      upgradeId: \"quantum_computer\",\n      value: 0.90,\n    },\n  }\n];\n"],"names":[],"mappings":";;;AAEA,4UAAkF,YAAY;AAA9F;AAAA;AAAA;AAAA;;AAEO,MAAM,sBAA4C;IACvD;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,mBAAmB;QACnB,MAAM,gMAAA,CAAA,MAAG;QACT,QAAQ;YACN,MAAM;YACN,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,mBAAmB;QACnB,MAAM,gMAAA,CAAA,MAAG;QACT,QAAQ;YACN,MAAM;YACN,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,mBAAmB;QACnB,MAAM,0MAAA,CAAA,WAAQ;QACd,QAAQ;YACN,MAAM;YACN,WAAW;YACX,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,mBAAmB;QACnB,MAAM,oMAAA,CAAA,QAAK;QACX,QAAQ;YACN,MAAM;YACN,OAAO;QACT;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,mBAAmB;QACnB,MAAM,sMAAA,CAAA,SAAM;QACZ,QAAQ;YACN,MAAM;YACN,WAAW;YACX,OAAO;QACT;IACF;CACD","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/achievements.ts"],"sourcesContent":["\nimport type { AchievementDefinition, GameStateSnapshot } from \"@/lib/types\";\nimport { Award, DollarSign, HandMetal, Pointer, Rocket, Server, Sparkles, Target, Star } from \"lucide-react\"; // Added Star\nimport { AVAILABLE_UPGRADES } from \"./upgrades\";\n\nexport const AVAILABLE_ACHIEVEMENTS: AchievementDefinition[] = [\n  {\n    id: \"first_click\",\n    name: \"Baby Steps\",\n    description: \"Make your first click.\",\n    icon: Pointer,\n    condition: (gameSnapshot) => gameSnapshot.totalManualClicks >= 1,\n    reward: { type: \"POINTS\", value: 5 },\n  },\n  {\n    id: \"click_enthusiast\",\n    name: \"Click Enthusiast\",\n    description: \"Click the button 100 times.\",\n    icon: HandMetal,\n    condition: (gameSnapshot) => gameSnapshot.totalManualClicks >= 100,\n    reward: { type: \"ITEM\", itemId: \"quick_points\", quantity: 1 },\n  },\n  {\n    id: \"point_novice\",\n    name: \"Point Novice\",\n    description: \"Earn 100 total points.\",\n    icon: DollarSign,\n    condition: (gameSnapshot) => gameSnapshot.points >= 100,\n    reward: { type: \"POINTS\", value: 20 },\n  },\n  {\n    id: \"point_adept\",\n    name: \"Point Adept\",\n    description: \"Earn 10,000 total points.\",\n    icon: Award,\n    condition: (gameSnapshot) => gameSnapshot.points >= 10000,\n    reward: { type: \"POINTS\", value: 250 },\n  },\n  {\n    id: \"harvester_owner\",\n    name: \"First Harvester\",\n    description: \"Buy your first Auto Harvester.\",\n    icon: Server,\n    condition: (gameSnapshot) =>\n      !!gameSnapshot.purchasedUpgrades[\"auto_harvester\"] &&\n      gameSnapshot.purchasedUpgrades[\"auto_harvester\"].quantity >= 1,\n    reward: { type: \"POINTS\", value: 50 },\n  },\n  {\n    id: \"many_harvesters\",\n    name: \"Harvester Fleet\",\n    description: \"Own 10 Auto Harvesters.\",\n    icon: Server,\n    condition: (gameSnapshot) =>\n      !!gameSnapshot.purchasedUpgrades[\"auto_harvester\"] &&\n      gameSnapshot.purchasedUpgrades[\"auto_harvester\"].quantity >= 10,\n    reward: { type: \"ITEM\", itemId: \"pps_boost_coffee\", quantity: 1 },\n  },\n  {\n    id: \"quantum_leap\",\n    name: \"Quantum Leap\",\n    description: \"Purchase a Quantum Computer.\",\n    icon: Rocket,\n    condition: (gameSnapshot) =>\n      !!gameSnapshot.purchasedUpgrades[\"quantum_computer\"] &&\n      gameSnapshot.purchasedUpgrades[\"quantum_computer\"].quantity >= 1,\n    reward: { type: \"POINTS\", value: 10000 },\n  },\n  {\n    id: \"artifice_collector\",\n    name: \"Artifice Collector\",\n    description: \"Acquire your first Artifice.\",\n    icon: Sparkles,\n    condition: (gameSnapshot) => Object.keys(gameSnapshot.acquiredArtifices).length >= 1,\n    reward: { type: \"POINTS\", value: 500 },\n  },\n   {\n    id: \"serious_investor\",\n    name: \"Serious Investor\",\n    description: \"Own at least one of every type of upgrade.\",\n    icon: Target,\n    condition: (gameSnapshot) => {\n      const allUpgradeIds = AVAILABLE_UPGRADES.map(upg => upg.id);\n      return allUpgradeIds.every(id => gameSnapshot.purchasedUpgrades[id] && gameSnapshot.purchasedUpgrades[id].quantity > 0);\n    },\n    reward: { type: \"POINTS\", value: 20000 },\n  },\n  {\n    id: \"first_prestige\",\n    name: \"Rebirth\",\n    description: \"Prestige for the first time.\",\n    icon: Star, // Using Star for prestige\n    condition: (gameSnapshot: GameStateSnapshot) => gameSnapshot.legacyTokens > 0 || (Object.keys(gameSnapshot.purchasedPrestigeUpgrades).length > 0), // A bit tricky to check *during* prestige, so check for tokens or purchased prestige upgrades\n    reward: { type: \"POINTS\", value: 100000 }, // A point boost after first prestige\n  },\n];\n"],"names":[],"mappings":";;;AAEA,oVAA8G,aAAa;AAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEO,MAAM,yBAAkD;IAC7D;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,wMAAA,CAAA,UAAO;QACb,WAAW,CAAC,eAAiB,aAAa,iBAAiB,IAAI;QAC/D,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAE;IACrC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,gNAAA,CAAA,YAAS;QACf,WAAW,CAAC,eAAiB,aAAa,iBAAiB,IAAI;QAC/D,QAAQ;YAAE,MAAM;YAAQ,QAAQ;YAAgB,UAAU;QAAE;IAC9D;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kNAAA,CAAA,aAAU;QAChB,WAAW,CAAC,eAAiB,aAAa,MAAM,IAAI;QACpD,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAG;IACtC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,oMAAA,CAAA,QAAK;QACX,WAAW,CAAC,eAAiB,aAAa,MAAM,IAAI;QACpD,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAI;IACvC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,WAAW,CAAC,eACV,CAAC,CAAC,aAAa,iBAAiB,CAAC,iBAAiB,IAClD,aAAa,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,IAAI;QAC/D,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAG;IACtC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,WAAW,CAAC,eACV,CAAC,CAAC,aAAa,iBAAiB,CAAC,iBAAiB,IAClD,aAAa,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,IAAI;QAC/D,QAAQ;YAAE,MAAM;YAAQ,QAAQ;YAAoB,UAAU;QAAE;IAClE;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,WAAW,CAAC,eACV,CAAC,CAAC,aAAa,iBAAiB,CAAC,mBAAmB,IACpD,aAAa,iBAAiB,CAAC,mBAAmB,CAAC,QAAQ,IAAI;QACjE,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAM;IACzC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,0MAAA,CAAA,WAAQ;QACd,WAAW,CAAC,eAAiB,OAAO,IAAI,CAAC,aAAa,iBAAiB,EAAE,MAAM,IAAI;QACnF,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAI;IACvC;IACC;QACC,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,WAAW,CAAC;YACV,MAAM,gBAAgB,yHAAA,CAAA,qBAAkB,CAAC,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE;YAC1D,OAAO,cAAc,KAAK,CAAC,CAAA,KAAM,aAAa,iBAAiB,CAAC,GAAG,IAAI,aAAa,iBAAiB,CAAC,GAAG,CAAC,QAAQ,GAAG;QACvH;QACA,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAM;IACzC;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kMAAA,CAAA,OAAI;QACV,WAAW,CAAC,eAAoC,aAAa,YAAY,GAAG,KAAM,OAAO,IAAI,CAAC,aAAa,yBAAyB,EAAE,MAAM,GAAG;QAC/I,QAAQ;YAAE,MAAM;YAAU,OAAO;QAAO;IAC1C;CACD","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/prestige.ts"],"sourcesContent":["\nimport type { PrestigeUpgradeDefinition } from \"@/lib/types\";\nimport { Gem, Zap, TrendingUp, Award, Shield } from \"lucide-react\";\n\nexport const AVAILABLE_PRESTIGE_UPGRADES: PrestigeUpgradeDefinition[] = [\n  {\n    id: \"prestige_pps_boost_1\",\n    name: \"Legacy Power I\",\n    description: \"Permanently increases all Points Per Second (PPS) by 10%.\",\n    icon: TrendingUp,\n    cost: 5,\n    effect: { type: \"GLOBAL_PPS_BOOST_PRESTIGE\", value: 0.10 },\n    maxLevel: 5, // Example: Can be purchased 5 times\n  },\n  {\n    id: \"prestige_ppc_boost_1\",\n    name: \"Ancient Click I\",\n    description: \"Permanently increases all Points Per Click (PPC) by 20%.\",\n    icon: Zap,\n    cost: 3,\n    effect: { type: \"GLOBAL_PPC_BOOST_PRESTIGE\", value: 0.20 },\n    maxLevel: 5,\n  },\n  {\n    id: \"prestige_starting_points\",\n    name: \"Head Start\",\n    description: \"Start with 1,000 points after prestiging (bonus applied once). This effect does not stack with itself but is reapplied after each prestige.\",\n    icon: Award, // Using Award icon for a starting bonus\n    cost: 10,\n    effect: { type: \"GLOBAL_PPS_BOOST_PRESTIGE\", value: 0 }, // No direct PPS/PPC, handled in prestige logic\n    // This effect would be specially handled in the prestigeGame function\n  },\n   {\n    id: \"prestige_artifice_chance\",\n    name: \"Artifice Attunement\",\n    description: \"Slightly increases the chance of finding Artifices.\",\n    icon: Gem, \n    cost: 15,\n    effect: { type: \"GLOBAL_PPS_BOOST_PRESTIGE\", value: 0 }, // Placeholder, actual effect in GameProvider\n    maxLevel: 3,\n  },\n  {\n    id: \"prestige_cheaper_upgrades\",\n    name: \"Economic Insight\",\n    description: \"Reduces the cost of all regular upgrades by 2% per level.\",\n    icon: Shield, // Using Shield for cost reduction/defense\n    cost: 20,\n    effect: { type: \"GLOBAL_PPS_BOOST_PRESTIGE\", value: 0 }, // Placeholder, actual effect in GameProvider\n    maxLevel: 5,\n  },\n];\n"],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEO,MAAM,8BAA2D;IACtE;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,kNAAA,CAAA,aAAU;QAChB,MAAM;QACN,QAAQ;YAAE,MAAM;YAA6B,OAAO;QAAK;QACzD,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,gMAAA,CAAA,MAAG;QACT,MAAM;QACN,QAAQ;YAAE,MAAM;YAA6B,OAAO;QAAK;QACzD,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,oMAAA,CAAA,QAAK;QACX,MAAM;QACN,QAAQ;YAAE,MAAM;YAA6B,OAAO;QAAE;IAExD;IACC;QACC,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,gMAAA,CAAA,MAAG;QACT,MAAM;QACN,QAAQ;YAAE,MAAM;YAA6B,OAAO;QAAE;QACtD,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,aAAa;QACb,MAAM,sMAAA,CAAA,SAAM;QACZ,MAAM;QACN,QAAQ;YAAE,MAAM;YAA6B,OAAO;QAAE;QACtD,UAAU;IACZ;CACD","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/gameConfig.ts"],"sourcesContent":["\nexport const INITIAL_POINTS = 0;\nexport const POINTS_PER_CLICK = 1;\n\nexport const ITEM_DROP_CHANCE_PER_SECOND = 0.10; \nexport const ITEM_DROP_CHANCE_PER_CLICK = 0.02;  \n\nexport const ARTIFICE_DROP_CHANCE_PER_SECOND = 0.02;\nexport const ARTIFICE_DROP_CHANCE_PER_CLICK = 0.005;\n\nexport const SAVE_GAME_KEY = \"pointClickerProSaveData_v2\"; \nexport const AUTOSAVE_INTERVAL = 30000; \n\nexport const MAX_OFFLINE_EARNING_DURATION_SECONDS = 2 * 60 * 60; \n\n// Prestige System Config\nexport const INITIAL_LEGACY_TOKENS = 0;\nexport const PRESTIGE_POINTS_REQUIREMENT = 1_000_000_000_000; // 1 Trillion points to prestige\nexport const LEGACY_TOKEN_FORMULA = (points: number): number => {\n  // Example: 1 LT for every 1B points, but scaled - sqrt makes it harder to get many tokens initially\n  // Adjust this formula to balance prestige progression\n  if (points < PRESTIGE_POINTS_REQUIREMENT) return 0;\n  return Math.floor(Math.sqrt(points / 1_000_000_000)); \n};\nexport const PRESTIGE_REQUIREMENT_INCREASE_FACTOR = 2; // Multiplies points needed for next prestige\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AACO,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AAEzB,MAAM,8BAA8B;AACpC,MAAM,6BAA6B;AAEnC,MAAM,kCAAkC;AACxC,MAAM,iCAAiC;AAEvC,MAAM,gBAAgB;AACtB,MAAM,oBAAoB;AAE1B,MAAM,uCAAuC,IAAI,KAAK;AAGtD,MAAM,wBAAwB;AAC9B,MAAM,8BAA8B,mBAAmB,gCAAgC;AACvF,MAAM,uBAAuB,CAAC;IACnC,oGAAoG;IACpG,sDAAsD;IACtD,IAAI,SAAS,6BAA6B,OAAO;IACjD,OAAO,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS;AACvC;AACO,MAAM,uCAAuC,GAAG,6CAA6C","debugId":null}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/GameProvider.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type React from \"react\";\nimport { createContext, useContext, useState, useEffect, useMemo, useCallback } from \"react\";\nimport type { GameContextType, PurchasedUpgrade, InventoryItem, ActiveBuff, AcquiredArtifice, AcquiredAchievement, PurchasedPrestigeUpgrade, GameStateSnapshot, PurchaseMultiplier } from \"@/lib/types\";\nimport { AVAILABLE_UPGRADES, calculateExponentialUpgradeCost, calculateTotalCostForQuantity, calculateMaxAffordable } from \"@/config/upgrades\";\nimport { AVAILABLE_ITEMS } from \"@/config/items\";\nimport { AVAILABLE_ARTIFICES } from \"@/config/artifices\";\nimport { AVAILABLE_ACHIEVEMENTS } from \"@/config/achievements\";\nimport { AVAILABLE_PRESTIGE_UPGRADES } from \"@/config/prestige\";\nimport {\n  INITIAL_POINTS, POINTS_PER_CLICK,\n  ITEM_DROP_CHANCE_PER_SECOND, ARTIFICE_DROP_CHANCE_PER_SECOND,\n  ITEM_DROP_CHANCE_PER_CLICK, ARTIFICE_DROP_CHANCE_PER_CLICK,\n  SAVE_GAME_KEY, AUTOSAVE_INTERVAL, MAX_OFFLINE_EARNING_DURATION_SECONDS,\n  INITIAL_LEGACY_TOKENS, PRESTIGE_POINTS_REQUIREMENT, LEGACY_TOKEN_FORMULA,\n  PRESTIGE_REQUIREMENT_INCREASE_FACTOR\n} from \"@/config/gameConfig\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst GameContext = createContext<GameContextType | undefined>(undefined);\n\nexport const GameProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [points, setPoints] = useState(INITIAL_POINTS);\n  const [purchasedUpgrades, setPurchasedUpgrades] = useState<Record<string, PurchasedUpgrade>>({});\n  const [inventory, setInventory] = useState<Record<string, InventoryItem>>({});\n  const [activeBuffs, setActiveBuffs] = useState<ActiveBuff[]>([]);\n  const [acquiredArtifices, setAcquiredArtifices] = useState<Record<string, AcquiredArtifice>>({});\n  const [gameInitialized, setGameInitialized] = useState(false);\n  const [totalManualClicks, setTotalManualClicks] = useState(0);\n  const [acquiredAchievements, setAcquiredAchievements] = useState<Record<string, AcquiredAchievement>>({});\n\n  const [legacyTokens, setLegacyTokens] = useState(INITIAL_LEGACY_TOKENS);\n  const [purchasedPrestigeUpgrades, setPurchasedPrestigeUpgrades] = useState<Record<string, PurchasedPrestigeUpgrade>>({});\n  const [currentPrestigeRequirement, setCurrentPrestigeRequirement] = useState(PRESTIGE_POINTS_REQUIREMENT);\n  const [prestigeCount, setPrestigeCount] = useState(0);\n  const [lastSaveTimestamp, setLastSaveTimestamp] = useState<number | null>(null);\n  const [purchaseMultiplier, setPurchaseMultiplier] = useState<PurchaseMultiplier>(1);\n\n\n  const { toast } = useToast();\n\n  const currentPointsPerClick = useMemo(() => {\n    let basePPC = POINTS_PER_CLICK;\n    Object.values(acquiredArtifices).forEach(artifice => {\n      const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n      if (artificeDef?.effect.type === \"GLOBAL_CLICK_POWER_MULTIPLIER\") {\n        basePPC *= artificeDef.effect.value;\n      }\n    });\n    Object.values(purchasedPrestigeUpgrades).forEach(pu => {\n      const prestigeDef = AVAILABLE_PRESTIGE_UPGRADES.find(p => p.id === pu.id);\n      if (prestigeDef?.effect.type === \"GLOBAL_PPC_BOOST_PRESTIGE\") {\n        basePPC *= (1 + prestigeDef.effect.value * pu.level);\n      }\n    });\n    return basePPC;\n  }, [acquiredArtifices, purchasedPrestigeUpgrades]);\n\n  const currentTotalPointsPerSecond = useMemo(() => {\n    let basePPS = 0;\n    Object.values(purchasedUpgrades).forEach(purchasedUpg => {\n      const def = AVAILABLE_UPGRADES.find(u => u.id === purchasedUpg.id);\n      if (def) {\n        let upgradePPS = def.ppsPerUnit * purchasedUpg.quantity;\n        Object.values(acquiredArtifices).forEach(artifice => {\n          const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n          if (artificeDef?.effect.type === \"UPGRADE_SPECIFIC_PPS_MULTIPLIER\" && artificeDef.effect.upgradeId === def.id) {\n            upgradePPS *= artificeDef.effect.value;\n          }\n        });\n        basePPS += upgradePPS;\n      }\n    });\n\n    let ppsWithTemporaryBuffs = basePPS;\n    const now = Date.now();\n    activeBuffs.forEach(buff => {\n      if (now < buff.expiresAt) {\n        if (buff.effectType === \"PPS_MULTIPLIER\") {\n          ppsWithTemporaryBuffs *= buff.value;\n        }\n      }\n    });\n\n    let finalPPS = ppsWithTemporaryBuffs;\n    Object.values(acquiredArtifices).forEach(artifice => {\n      const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n      if (artificeDef?.effect.type === \"GLOBAL_PPS_MULTIPLIER\") {\n        finalPPS *= artificeDef.effect.value;\n      }\n    });\n    Object.values(purchasedPrestigeUpgrades).forEach(pu => {\n      const prestigeDef = AVAILABLE_PRESTIGE_UPGRADES.find(p => p.id === pu.id);\n      if (prestigeDef?.effect.type === \"GLOBAL_PPS_BOOST_PRESTIGE\") {\n        finalPPS *= (1 + prestigeDef.effect.value * pu.level);\n      }\n    });\n    return finalPPS;\n  }, [purchasedUpgrades, activeBuffs, acquiredArtifices, purchasedPrestigeUpgrades]);\n\n\n  const saveGame = useCallback(() => {\n    if (!gameInitialized) return;\n    try {\n      const currentTimestamp = Date.now();\n      const gameState = {\n        points,\n        purchasedUpgrades,\n        inventory,\n        acquiredArtifices,\n        totalManualClicks,\n        acquiredAchievements,\n        legacyTokens,\n        purchasedPrestigeUpgrades,\n        currentPrestigeRequirement,\n        prestigeCount,\n        lastSaveTimestamp: currentTimestamp,\n        version: \"2.3\", // Incremented for multiplier feature & save structure\n      };\n      localStorage.setItem(SAVE_GAME_KEY, JSON.stringify(gameState));\n      setLastSaveTimestamp(currentTimestamp); // Update in-memory timestamp\n    } catch (error) {\n      console.error(\"Failed to save game:\", error);\n    }\n  }, [points, purchasedUpgrades, inventory, acquiredArtifices, totalManualClicks, acquiredAchievements, legacyTokens, purchasedPrestigeUpgrades, currentPrestigeRequirement, prestigeCount, gameInitialized]);\n\n  const checkAndGrantAchievements = useCallback(() => {\n    const gameSnapshot: GameStateSnapshot = {\n        points,\n        purchasedUpgrades,\n        inventory,\n        acquiredArtifices,\n        totalManualClicks,\n        legacyTokens,\n        purchasedPrestigeUpgrades\n    };\n\n    AVAILABLE_ACHIEVEMENTS.forEach(ach => {\n      if (!acquiredAchievements[ach.id] && ach.condition(gameSnapshot)) {\n        setAcquiredAchievements(prev => ({\n          ...prev,\n          [ach.id]: { achievementId: ach.id, acquiredAt: Date.now() },\n        }));\n\n        let rewardMsg = \"\";\n        if (ach.reward.type === \"POINTS\") {\n          setPoints(p => p + ach.reward.value);\n          rewardMsg = `+${ach.reward.value.toLocaleString()} Points!`;\n        } else if (ach.reward.type === \"ITEM\") {\n          const itemDef = AVAILABLE_ITEMS.find(item => item.id === ach.reward.itemId);\n           if(itemDef){\n            setInventory(prevInv => {\n              const currentQuantity = prevInv[ach.reward.itemId]?.quantity || 0;\n              return {\n                ...prevInv,\n                [ach.reward.itemId]: { itemId: ach.reward.itemId, quantity: currentQuantity + ach.reward.quantity },\n              };\n            });\n            rewardMsg = `+${ach.reward.quantity} ${itemDef.name}!`;\n          }\n        }\n        setTimeout(() => {\n          toast({\n            title: `Achievement Unlocked: ${ach.name}!`,\n            description: `${ach.description} ${rewardMsg}`,\n            duration: 5000,\n          });\n        }, 0);\n      }\n    });\n  }, [points, purchasedUpgrades, inventory, acquiredArtifices, totalManualClicks, acquiredAchievements, legacyTokens, purchasedPrestigeUpgrades, toast]);\n\n\n  const loadGame = useCallback(() => {\n    try {\n      const savedGame = localStorage.getItem(SAVE_GAME_KEY);\n      if (savedGame) {\n        const gameState = JSON.parse(savedGame);\n        \n        let loadedPoints = gameState.points || INITIAL_POINTS;\n        const loadedPurchasedUpgrades = gameState.purchasedUpgrades || {};\n        const loadedInventory = gameState.inventory || {};\n        const loadedAcquiredArtifices = gameState.acquiredArtifices || {};\n        const loadedTotalManualClicks = gameState.totalManualClicks || 0;\n        const loadedAcquiredAchievements = gameState.acquiredAchievements || {};\n        const loadedLegacyTokens = gameState.legacyTokens || INITIAL_LEGACY_TOKENS;\n        const loadedPurchasedPrestigeUpgrades = gameState.purchasedPrestigeUpgrades || {};\n        const loadedPrestigeCount = gameState.prestigeCount || 0;\n        const savedLastTimestamp = gameState.lastSaveTimestamp || null;\n        setLastSaveTimestamp(savedLastTimestamp);\n        const loadedCurrentPrestigeRequirement = gameState.currentPrestigeRequirement || PRESTIGE_POINTS_REQUIREMENT * Math.pow(PRESTIGE_REQUIREMENT_INCREASE_FACTOR, loadedPrestigeCount);\n\n\n        if (savedLastTimestamp) {\n          const ppsAtSaveTime = (() => {\n            let basePPS = 0;\n            Object.values(loadedPurchasedUpgrades).forEach((purchasedUpg: any) => {\n              const def = AVAILABLE_UPGRADES.find(u => u.id === purchasedUpg.id);\n              if (def) {\n                let upgradePPS = def.ppsPerUnit * purchasedUpg.quantity;\n                Object.values(loadedAcquiredArtifices).forEach((artifice: any) => {\n                    const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n                    if (artificeDef?.effect.type === \"UPGRADE_SPECIFIC_PPS_MULTIPLIER\" && artificeDef.effect.upgradeId === def.id) {\n                        upgradePPS *= artificeDef.effect.value;\n                    }\n                });\n                basePPS += upgradePPS;\n              }\n            });\n            Object.values(loadedAcquiredArtifices).forEach((artifice: any) => {\n              const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n              if (artificeDef?.effect.type === \"GLOBAL_PPS_MULTIPLIER\") {\n                basePPS *= artificeDef.effect.value;\n              }\n            });\n            Object.values(loadedPurchasedPrestigeUpgrades).forEach((pu: any) => {\n                const prestigeDef = AVAILABLE_PRESTIGE_UPGRADES.find(p => p.id === pu.id);\n                if (prestigeDef?.effect.type === \"GLOBAL_PPS_BOOST_PRESTIGE\") {\n                    basePPS *= (1 + prestigeDef.effect.value * pu.level);\n                }\n            });\n            return basePPS;\n          })();\n\n          const now = Date.now();\n          let elapsedSecondsOffline = (now - savedLastTimestamp) / 1000;\n          elapsedSecondsOffline = Math.min(elapsedSecondsOffline, MAX_OFFLINE_EARNING_DURATION_SECONDS);\n          \n          if (elapsedSecondsOffline > 0 && ppsAtSaveTime > 0) {\n            const offlinePointsEarned = Math.floor(elapsedSecondsOffline * ppsAtSaveTime);\n            if (offlinePointsEarned > 0) {\n              loadedPoints += offlinePointsEarned;\n              setTimeout(() => {\n                toast({ title: \"Welcome Back!\", description: `You earned ${offlinePointsEarned.toLocaleString()} points while away.` });\n              }, 100);\n            }\n          }\n        }\n\n        setPoints(loadedPoints);\n        setPurchasedUpgrades(loadedPurchasedUpgrades);\n        setInventory(loadedInventory);\n        setAcquiredArtifices(loadedAcquiredArtifices);\n        setTotalManualClicks(loadedTotalManualClicks);\n        setAcquiredAchievements(loadedAcquiredAchievements);\n        setLegacyTokens(loadedLegacyTokens);\n        setPurchasedPrestigeUpgrades(loadedPurchasedPrestigeUpgrades);\n        setCurrentPrestigeRequirement(loadedCurrentPrestigeRequirement);\n        setPrestigeCount(loadedPrestigeCount);\n\n        setActiveBuffs([]);\n        \n        setTimeout(() => {\n          toast({ title: \"Game Loaded\", description: \"Your progress has been restored.\" });\n        }, 0);\n      } else {\n        setActiveBuffs([]);\n        setCurrentPrestigeRequirement(PRESTIGE_POINTS_REQUIREMENT);\n        setPrestigeCount(0);\n        setLastSaveTimestamp(Date.now()); // Set initial save timestamp\n      }\n    } catch (error) {\n      console.error(\"Failed to load game:\", error);\n      setPoints(INITIAL_POINTS);\n      setPurchasedUpgrades({});\n      setInventory({});\n      setAcquiredArtifices({});\n      setTotalManualClicks(0);\n      setAcquiredAchievements({});\n      setLegacyTokens(INITIAL_LEGACY_TOKENS);\n      setPurchasedPrestigeUpgrades({});\n      setCurrentPrestigeRequirement(PRESTIGE_POINTS_REQUIREMENT);\n      setPrestigeCount(0);\n      setActiveBuffs([]);\n      setLastSaveTimestamp(Date.now());\n    }\n    setGameInitialized(true);\n  }, [toast]);\n\n  useEffect(() => {\n    loadGame();\n  }, [loadGame]);\n\n  const prestigeGame = useCallback(() => {\n    if (points < currentPrestigeRequirement) {\n      toast({\n        title: \"Prestige Not Available\",\n        description: `You need ${currentPrestigeRequirement.toLocaleString()} points to prestige. You currently have ${points.toLocaleString()} points.`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const earnedLT = LEGACY_TOKEN_FORMULA(points);\n    setLegacyTokens(prev => prev + earnedLT);\n    \n    let startingPointsAfterPrestige = INITIAL_POINTS;\n    const headStartUpgrade = purchasedPrestigeUpgrades['prestige_starting_points'];\n    if (headStartUpgrade && headStartUpgrade.level > 0) {\n        startingPointsAfterPrestige = 1000;\n    }\n\n    setPoints(startingPointsAfterPrestige);\n    setPurchasedUpgrades({});\n    setInventory({});\n    setActiveBuffs([]);\n\n    const newPrestigeCount = prestigeCount + 1;\n    setPrestigeCount(newPrestigeCount);\n    setCurrentPrestigeRequirement(PRESTIGE_POINTS_REQUIREMENT * Math.pow(PRESTIGE_REQUIREMENT_INCREASE_FACTOR, newPrestigeCount));\n\n\n    toast({\n      title: \"Prestiged!\",\n      description: `You earned ${earnedLT} Legacy Tokens! Your game has been reset, but permanent bonuses remain.`,\n      duration: 7000,\n    });\n    saveGame();\n  }, [points, currentPrestigeRequirement, legacyTokens, prestigeCount, toast, saveGame, purchasedPrestigeUpgrades]);\n\n\n  const purchasePrestigeUpgrade = useCallback((upgradeId: string) => {\n    const upgradeDef = AVAILABLE_PRESTIGE_UPGRADES.find(upg => upg.id === upgradeId);\n    if (!upgradeDef) {\n      toast({ title: \"Error\", description: \"Prestige upgrade not found.\", variant: \"destructive\" });\n      return;\n    }\n\n    const currentLevel = purchasedPrestigeUpgrades[upgradeId]?.level || 0;\n    if (upgradeDef.maxLevel && currentLevel >= upgradeDef.maxLevel) {\n      toast({ title: \"Max Level Reached\", description: `You already have the maximum level for ${upgradeDef.name}.`, variant: \"default\" });\n      return;\n    }\n    \n    const cost = upgradeDef.cost;\n\n    if (legacyTokens >= cost) {\n      setLegacyTokens(prev => prev - cost);\n      setPurchasedPrestigeUpgrades(prev => ({\n        ...prev,\n        [upgradeId]: { id: upgradeId, level: currentLevel + 1 },\n      }));\n      toast({\n        title: \"Prestige Upgrade Purchased!\",\n        description: `You purchased ${upgradeDef.name} (Level ${currentLevel + 1}) for ${cost} Legacy Tokens.`,\n      });\n      saveGame();\n    } else {\n      toast({\n        title: \"Insufficient Legacy Tokens\",\n        description: `Not enough Legacy Tokens to purchase ${upgradeDef.name}.`,\n        variant: \"destructive\",\n      });\n    }\n  }, [legacyTokens, purchasedPrestigeUpgrades, toast, saveGame]);\n\n\n  const resetGame = useCallback(() => {\n    setPoints(INITIAL_POINTS);\n    setPurchasedUpgrades({});\n    setInventory({});\n    setActiveBuffs([]);\n    setAcquiredArtifices({});\n    setTotalManualClicks(0);\n    setAcquiredAchievements({});\n    setLegacyTokens(INITIAL_LEGACY_TOKENS);\n    setPurchasedPrestigeUpgrades({});\n    setCurrentPrestigeRequirement(PRESTIGE_POINTS_REQUIREMENT);\n    setPrestigeCount(0);\n    setLastSaveTimestamp(Date.now());\n\n\n    setTimeout(() => {\n      toast({ title: \"Game Reset\", description: \"Started a new clicking adventure!\" });\n    }, 0);\n    try {\n      localStorage.removeItem(SAVE_GAME_KEY);\n      const initialGameState = {\n        points: INITIAL_POINTS,\n        purchasedUpgrades: {},\n        inventory: {},\n        acquiredArtifices: {},\n        totalManualClicks: 0,\n        acquiredAchievements: {},\n        legacyTokens: INITIAL_LEGACY_TOKENS,\n        purchasedPrestigeUpgrades: {},\n        currentPrestigeRequirement: PRESTIGE_POINTS_REQUIREMENT,\n        prestigeCount: 0,\n        lastSaveTimestamp: Date.now(),\n        version: \"2.3\",\n      };\n      localStorage.setItem(SAVE_GAME_KEY, JSON.stringify(initialGameState));\n    } catch (error) {\n      console.error(\"Failed to save reset game state:\", error);\n    }\n    if (!gameInitialized) {\n      setGameInitialized(true);\n    }\n  }, [toast, gameInitialized]);\n\n  useEffect(() => {\n    if (gameInitialized) {\n      const autoSaveTimer = setInterval(saveGame, AUTOSAVE_INTERVAL);\n      return () => clearInterval(autoSaveTimer);\n    }\n  }, [saveGame, gameInitialized]);\n\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      if (gameInitialized) {\n        saveGame();\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [saveGame, gameInitialized]);\n  \n  useEffect(() => {\n    if(gameInitialized){\n      checkAndGrantAchievements();\n    }\n  }, [points, purchasedUpgrades, totalManualClicks, acquiredArtifices, inventory, legacyTokens, purchasedPrestigeUpgrades, gameInitialized, checkAndGrantAchievements]);\n\n  const addItemToInventory = useCallback((itemId: string, quantity: number = 1) => {\n    const itemDef = AVAILABLE_ITEMS.find(item => item.id === itemId);\n    if (!itemDef) {\n      console.error(\"Attempted to add unknown item:\", itemId);\n      return;\n    }\n    setInventory(prevInventory => {\n      const existingItem = prevInventory[itemId];\n      const currentQuantity = existingItem ? existingItem.quantity : 0;\n      const newQuantity = currentQuantity + quantity;\n      setTimeout(() => {\n        toast({\n          title: \"Item Acquired!\",\n          description: `You found: ${itemDef.name}!`,\n        });\n      }, 0);\n      return {\n        ...prevInventory,\n        [itemId]: { itemId, quantity: newQuantity },\n      };\n    });\n  }, [toast]);\n\n  const addArtificeToCollection = useCallback((artificeId: string) => {\n    const artificeDef = AVAILABLE_ARTIFICES.find(art => art.id === artificeId);\n    if (!artificeDef) {\n      console.error(\"Attempted to add unknown artifice:\", artificeId);\n      return;\n    }\n    if (acquiredArtifices[artificeId]) return; \n\n    setAcquiredArtifices(prev => ({\n      ...prev,\n      [artificeId]: { artificeId, acquiredAt: Date.now() }\n    }));\n    setTimeout(() => {\n      toast({\n        title: \"Artifice Acquired!\",\n        description: `${artificeDef.name} - ${artificeDef.effectDescription}`,\n        variant: \"default\",\n        duration: 5000,\n      });\n    }, 0);\n  }, [toast, acquiredArtifices]);\n\n  const useItem = useCallback((itemId: string) => {\n    const itemDef = AVAILABLE_ITEMS.find(item => item.id === itemId);\n    const inventoryItem = inventory[itemId];\n\n    if (!itemDef || !inventoryItem || inventoryItem.quantity <= 0) {\n      setTimeout(() => {\n        toast({ title: \"Item Error\", description: \"Cannot use this item.\", variant: \"destructive\" });\n      }, 0);\n      return;\n    }\n\n    setInventory(prev => {\n      const newInventory = { ...prev };\n      if (newInventory[itemId].quantity > 1) {\n        newInventory[itemId].quantity -= 1;\n      } else {\n        delete newInventory[itemId];\n      }\n      return newInventory;\n    });\n\n    switch (itemDef.effect.type) {\n      case \"INSTANT_POINTS\":\n        setPoints(prev => prev + itemDef.effect.value);\n        setTimeout(() => {\n          toast({ title: `${itemDef.name} Used!`, description: `Gained ${itemDef.effect.value.toFixed(0)} Points!` });\n        }, 0);\n        break;\n      case \"PPS_MULTIPLIER\":\n        if (itemDef.effect.durationSeconds) {\n          setActiveBuffs(prevBuffs => {\n            const now = Date.now();\n            let buffFoundAndStacked = false;\n            let newBuffs = prevBuffs.map(buff => {\n              if (buff.itemId === itemDef.id && buff.effectType === itemDef.effect.type) {\n                buffFoundAndStacked = true;\n                return {\n                  ...buff,\n                  expiresAt: Math.max(now, buff.expiresAt) + itemDef.effect.durationSeconds! * 1000,\n                  value: itemDef.effect.value, \n                };\n              }\n              return buff;\n            }).filter(buff => now < buff.expiresAt); \n\n            if (buffFoundAndStacked) {\n              return newBuffs;\n            } else {\n              newBuffs = newBuffs.filter(buff => buff.effectType !== itemDef.effect.type);\n              newBuffs.push({\n                itemId: itemDef.id,\n                effectType: itemDef.effect.type,\n                value: itemDef.effect.value,\n                expiresAt: now + itemDef.effect.durationSeconds! * 1000,\n              });\n              return newBuffs;\n            }\n          });\n          setTimeout(() => {\n            toast({ title: `${itemDef.name} Activated!`, description: `${itemDef.description}`, duration: itemDef.effect.durationSeconds! * 1000 });\n          }, 0);\n        }\n        break;\n    }\n  }, [inventory, toast]);\n  \n\n  useEffect(() => {\n    if (!gameInitialized) return;\n    const gameLoop = setInterval(() => {\n      let itemDropModifier = 1; \n      const artificeAttunement = purchasedPrestigeUpgrades['prestige_artifice_chance'];\n      if (artificeAttunement) {\n        itemDropModifier *= (1 + (0.1 * artificeAttunement.level)); \n      }\n\n      if (Math.random() < ITEM_DROP_CHANCE_PER_SECOND * itemDropModifier) {\n        const availableToDrop = AVAILABLE_ITEMS;\n        if (availableToDrop.length > 0) {\n          const randomIndex = Math.floor(Math.random() * availableToDrop.length);\n          addItemToInventory(availableToDrop[randomIndex].id);\n        }\n      }\n      \n      if (Math.random() < ARTIFICE_DROP_CHANCE_PER_SECOND * itemDropModifier) {\n        const unacquiredArtifices = AVAILABLE_ARTIFICES.filter(artDef => !acquiredArtifices[artDef.id]);\n        if (unacquiredArtifices.length > 0) {\n          const randomIndex = Math.floor(Math.random() * unacquiredArtifices.length);\n          addArtificeToCollection(unacquiredArtifices[randomIndex].id);\n        }\n      }\n      \n      const now = Date.now();\n      const activeBuffsStillActive = activeBuffs.filter(buff => {\n        if (now >= buff.expiresAt) {\n          const itemDef = AVAILABLE_ITEMS.find(item => item.id === buff.itemId);\n          setTimeout(() => {\n            toast({ title: \"Buff Expired\", description: `${itemDef?.name || 'A buff'} has worn off.` });\n          }, 0);\n          return false;\n        }\n        return true;\n      });\n      if (activeBuffsStillActive.length !== activeBuffs.length) {\n        setActiveBuffs(activeBuffsStillActive);\n      }\n\n      setPoints(prevPoints => prevPoints + currentTotalPointsPerSecond);\n    }, 1000);\n    return () => clearInterval(gameLoop);\n  }, [currentTotalPointsPerSecond, gameInitialized, toast, addItemToInventory, activeBuffs, acquiredArtifices, addArtificeToCollection, purchasedPrestigeUpgrades]);\n\n const purchaseUpgrade = useCallback((upgradeId: string, multiplier: PurchaseMultiplier) => {\n    const upgradeDef = AVAILABLE_UPGRADES.find(upg => upg.id === upgradeId);\n    if (!upgradeDef) {\n      toast({ title: \"Error\", description: \"Upgrade definition not found.\", variant: \"destructive\" });\n      return;\n    }\n\n    const numCurrentlyPurchased = purchasedUpgrades[upgradeId]?.quantity || 0;\n    let quantityToBuy = 0;\n    let totalCost = 0;\n\n    let baseCostForCalc = upgradeDef.baseCost;\n    Object.values(acquiredArtifices).forEach(artifice => {\n        const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n        if (artificeDef) {\n            if (artificeDef.effect.type === \"ALL_UPGRADES_COST_MULTIPLIER\") {\n                baseCostForCalc *= artificeDef.effect.value;\n            }\n            if (artificeDef.effect.type === \"SPECIFIC_UPGRADE_COST_MULTIPLIER\" && artificeDef.effect.upgradeId === upgradeId) {\n                baseCostForCalc *= artificeDef.effect.value;\n            }\n        }\n    });\n    const economicInsight = purchasedPrestigeUpgrades['prestige_cheaper_upgrades'];\n    if (economicInsight) {\n        baseCostForCalc *= (1 - (0.02 * economicInsight.level));\n    }\n\n\n    if (multiplier === \"MAX\") {\n      const maxAffordable = calculateMaxAffordable(baseCostForCalc, numCurrentlyPurchased, points);\n      quantityToBuy = maxAffordable.quantity;\n      totalCost = maxAffordable.totalCost;\n    } else {\n      quantityToBuy = multiplier;\n      totalCost = calculateTotalCostForQuantity(baseCostForCalc, numCurrentlyPurchased, quantityToBuy);\n    }\n\n    if (quantityToBuy === 0) {\n      toast({ title: \"Cannot Purchase\", description: \"Not enough points for even one unit.\", variant: \"destructive\" });\n      return;\n    }\n    \n    if (points >= totalCost) {\n      setPoints(prev => prev - totalCost);\n      setPurchasedUpgrades(prev => {\n        const newPurchased = { ...prev };\n        newPurchased[upgradeId] = {\n          id: upgradeId,\n          quantity: (newPurchased[upgradeId]?.quantity || 0) + quantityToBuy,\n        };\n        return newPurchased;\n      });\n      toast({\n        title: \"Upgrade Purchased!\",\n        description: `You purchased ${quantityToBuy > 1 ? quantityToBuy + 'x ' : ''}${upgradeDef.name} for ${totalCost.toFixed(0)} Points.`,\n      });\n      saveGame();\n    } else {\n      toast({\n        title: \"Insufficient Points\",\n        description: `Not enough points to purchase ${quantityToBuy > 1 ? quantityToBuy + 'x ' : ''}${upgradeDef.name}. Need ${totalCost.toFixed(0)}, have ${points.toFixed(0)}.`,\n        variant: \"destructive\",\n      });\n    }\n  }, [points, toast, purchasedUpgrades, acquiredArtifices, saveGame, purchasedPrestigeUpgrades]);\n\n\n  const clickMasterButton = useCallback(() => {\n    setPoints(prev => prev + currentPointsPerClick);\n    setTotalManualClicks(prev => prev + 1);\n\n    let itemDropModifier = 1; \n    const artificeAttunement = purchasedPrestigeUpgrades['prestige_artifice_chance'];\n    if (artificeAttunement) {\n      itemDropModifier *= (1 + (0.1 * artificeAttunement.level));\n    }\n\n    if (Math.random() < ITEM_DROP_CHANCE_PER_CLICK * itemDropModifier) {\n        const availableToDrop = AVAILABLE_ITEMS;\n        if (availableToDrop.length > 0) {\n          const randomIndex = Math.floor(Math.random() * availableToDrop.length);\n          addItemToInventory(availableToDrop[randomIndex].id);\n        }\n    }\n    if (Math.random() < ARTIFICE_DROP_CHANCE_PER_CLICK * itemDropModifier) {\n      const unacquiredArtifices = AVAILABLE_ARTIFICES.filter(artDef => !acquiredArtifices[artDef.id]);\n      if (unacquiredArtifices.length > 0) {\n        const randomIndex = Math.floor(Math.random() * unacquiredArtifices.length);\n        addArtificeToCollection(unacquiredArtifices[randomIndex].id);\n      }\n    }\n  }, [currentPointsPerClick, addItemToInventory, addArtificeToCollection, acquiredArtifices, purchasedPrestigeUpgrades]);\n\n  const contextValue = useMemo(() => ({\n    points,\n    setPoints,\n    purchasedUpgrades,\n    purchaseUpgrade,\n    clickMasterButton,\n    pointsPerClick: currentPointsPerClick,\n    totalPointsPerSecond: currentTotalPointsPerSecond,\n    resetGame,\n    gameInitialized,\n    inventory,\n    addItemToInventory,\n    useItem,\n    activeBuffs,\n    acquiredArtifices,\n    acquiredAchievements,\n    totalManualClicks,\n    legacyTokens,\n    purchasedPrestigeUpgrades,\n    prestigeGame,\n    purchasePrestigeUpgrade,\n    currentPrestigeRequirement,\n    prestigeCount,\n    purchaseMultiplier,\n    setPurchaseMultiplier,\n  }), [\n      points, purchasedUpgrades, purchaseUpgrade, clickMasterButton, currentPointsPerClick,\n      currentTotalPointsPerSecond, resetGame, gameInitialized, inventory, addItemToInventory,\n      useItem, activeBuffs, acquiredArtifices, acquiredAchievements, totalManualClicks,\n      legacyTokens, purchasedPrestigeUpgrades, prestigeGame, purchasePrestigeUpgrade,\n      currentPrestigeRequirement, prestigeCount, purchaseMultiplier, setPurchaseMultiplier\n    ]);\n\n  return <GameContext.Provider value={contextValue}>{children}</GameContext.Provider>;\n};\n\nexport const useGame = (): GameContextType => {\n  const context = useContext(GameContext);\n  if (context === undefined) {\n    throw new Error(\"useGame must be used within a GameProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1452, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1476, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/Dashboard.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Coins, TrendingUp, Zap, Gem } from \"lucide-react\"; // Added Gem for Legacy Tokens\nimport { useGame } from \"./GameProvider\";\nimport { Skeleton } from \"./ui/skeleton\";\n\nconst StatCard: React.FC<{ title: string; value: string | number; icon: React.ElementType; colorClass?: string; dataTestId?: string }> = ({ title, value, icon: Icon, colorClass, dataTestId }) => (\n  <Card>\n    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n      <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n      <Icon className={`h-5 w-5 ${colorClass || 'text-muted-foreground'}`} />\n    </CardHeader>\n    <CardContent>\n      <div className=\"text-2xl font-bold\" data-testid={dataTestId}>{typeof value === 'number' ? value.toLocaleString(undefined, {minimumFractionDigits: 0, maximumFractionDigits: 1}) : value}</div>\n    </CardContent>\n  </Card>\n);\n\n\nexport function Dashboard() {\n  const { points, totalPointsPerSecond, pointsPerClick, gameInitialized, legacyTokens } = useGame();\n\n  if (!gameInitialized) {\n    return (\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card><CardHeader><Skeleton className=\"h-6 w-3/4\" /></CardHeader><CardContent><Skeleton className=\"h-8 w-1/2\" /></CardContent></Card>\n        <Card><CardHeader><Skeleton className=\"h-6 w-3/4\" /></CardHeader><CardContent><Skeleton className=\"h-8 w-1/2\" /></CardContent></Card>\n        <Card><CardHeader><Skeleton className=\"h-6 w-3/4\" /></CardHeader><CardContent><Skeleton className=\"h-8 w-1/2\" /></CardContent></Card>\n        <Card><CardHeader><Skeleton className=\"h-6 w-3/4\" /></CardHeader><CardContent><Skeleton className=\"h-8 w-1/2\" /></CardContent></Card>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      <StatCard \n        title=\"Total Points\" \n        value={`${points.toFixed(0)}`} \n        icon={Coins} \n        colorClass={\"text-primary\"}\n        dataTestId=\"points\"\n      />\n      <StatCard \n        title=\"Points / Second (PPS)\" \n        value={`${totalPointsPerSecond.toFixed(1)}`} \n        icon={TrendingUp} \n        colorClass=\"text-accent\"\n        dataTestId=\"points-per-second\"\n      />\n      <StatCard \n        title=\"Points / Click (PPC)\" \n        value={`${pointsPerClick.toFixed(1)}`} \n        icon={Zap} \n        colorClass=\"text-amber-500\"\n        dataTestId=\"points-per-click\"\n      />\n      <StatCard\n        title=\"Legacy Tokens\"\n        value={legacyTokens}\n        icon={Gem}\n        colorClass=\"text-purple-500\" // Example color for Legacy Tokens\n        dataTestId=\"legacy-tokens\"\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA,oVAA4D,8BAA8B;AAA1F;AAAA;AAAA;AACA;AACA;AALA;;;;;;AAOA,MAAM,WAAmI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,iBAC5L,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAuB;;;;;;kCAC5C,8OAAC;wBAAK,WAAW,CAAC,QAAQ,EAAE,cAAc,yBAAyB;;;;;;;;;;;;0BAErE,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;oBAAqB,eAAa;8BAAa,OAAO,UAAU,WAAW,MAAM,cAAc,CAAC,WAAW;wBAAC,uBAAuB;wBAAG,uBAAuB;oBAAC,KAAK;;;;;;;;;;;;;;;;;AAMjL,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,oBAAoB,EAAE,cAAc,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAE9F,IAAI,CAAC,iBAAiB;QACpB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,gIAAA,CAAA,OAAI;;sCAAC,8OAAC,gIAAA,CAAA,aAAU;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;sCAA2B,8OAAC,gIAAA,CAAA,cAAW;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAClG,8OAAC,gIAAA,CAAA,OAAI;;sCAAC,8OAAC,gIAAA,CAAA,aAAU;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;sCAA2B,8OAAC,gIAAA,CAAA,cAAW;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAClG,8OAAC,gIAAA,CAAA,OAAI;;sCAAC,8OAAC,gIAAA,CAAA,aAAU;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;sCAA2B,8OAAC,gIAAA,CAAA,cAAW;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAClG,8OAAC,gIAAA,CAAA,OAAI;;sCAAC,8OAAC,gIAAA,CAAA,aAAU;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;sCAA2B,8OAAC,gIAAA,CAAA,cAAW;sCAAC,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;IAGxG;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,OAAM;gBACN,OAAO,GAAG,OAAO,OAAO,CAAC,IAAI;gBAC7B,MAAM,oMAAA,CAAA,QAAK;gBACX,YAAY;gBACZ,YAAW;;;;;;0BAEb,8OAAC;gBACC,OAAM;gBACN,OAAO,GAAG,qBAAqB,OAAO,CAAC,IAAI;gBAC3C,MAAM,kNAAA,CAAA,aAAU;gBAChB,YAAW;gBACX,YAAW;;;;;;0BAEb,8OAAC;gBACC,OAAM;gBACN,OAAO,GAAG,eAAe,OAAO,CAAC,IAAI;gBACrC,MAAM,gMAAA,CAAA,MAAG;gBACT,YAAW;gBACX,YAAW;;;;;;0BAEb,8OAAC;gBACC,OAAM;gBACN,OAAO;gBACP,MAAM,gMAAA,CAAA,MAAG;gBACT,YAAW,kBAAkB,kCAAkC;;gBAC/D,YAAW;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 1753, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1813, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/UpgradeCard.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { UpgradeDefinition, PurchaseMultiplier } from \"@/lib/types\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Coins, TrendingUp, BadgeDollarSign, Zap, Layers } from \"lucide-react\";\nimport React from \"react\";\nimport { calculateExponentialUpgradeCost, calculateTotalCostForQuantity, calculateMaxAffordable } from \"@/config/upgrades\";\nimport { useGame } from \"./GameProvider\"; // Import useGame to access purchaseUpgrade\n\ninterface UpgradeCardProps {\n  upgrade: UpgradeDefinition;\n  currentPoints: number;\n  totalPurchased: number; // Quantity of this specific upgrade type already purchased\n  currentMultiplier: PurchaseMultiplier;\n}\n\nconst DetailItem: React.FC<{ icon: React.ElementType, label: string, value: string | number, valueClass?: string }> = ({ icon: Icon, label, value, valueClass }) => (\n  <div className=\"flex items-center text-sm text-muted-foreground\">\n    <Icon className=\"mr-2 h-4 w-4\" />\n    <span>{label}:</span>\n    <span className={`ml-auto font-semibold ${valueClass || 'text-foreground'}`}>{typeof value === 'number' ? value.toLocaleString(undefined, {minimumFractionDigits: 0, maximumFractionDigits: value % 1 !== 0 ? 1 : 0}) : value}</span>\n  </div>\n);\n\nexport function UpgradeCard({ upgrade, currentPoints, totalPurchased, currentMultiplier }: UpgradeCardProps) {\n  const { purchaseUpgrade, acquiredArtifices, purchasedPrestigeUpgrades } = useGame(); // Get purchaseUpgrade from context\n  const IconComponent = upgrade.icon;\n\n  let baseCostForCalc = upgrade.baseCost;\n    Object.values(acquiredArtifices).forEach(artifice => {\n        const artificeDef = AVAILABLE_ARTIFICES.find(ad => ad.id === artifice.artificeId);\n        if (artificeDef) {\n            if (artificeDef.effect.type === \"ALL_UPGRADES_COST_MULTIPLIER\") {\n                baseCostForCalc *= artificeDef.effect.value;\n            }\n            if (artificeDef.effect.type === \"SPECIFIC_UPGRADE_COST_MULTIPLIER\" && artificeDef.effect.upgradeId === upgrade.id) {\n                baseCostForCalc *= artificeDef.effect.value;\n            }\n        }\n    });\n    const economicInsight = purchasedPrestigeUpgrades['prestige_cheaper_upgrades'];\n    if (economicInsight) {\n        baseCostForCalc *= (1 - (0.02 * economicInsight.level));\n    }\n\n\n  const { cost: displayCost, quantity: displayQuantity } = React.useMemo(() => {\n    if (currentMultiplier === \"MAX\") {\n      const { quantity, totalCost } = calculateMaxAffordable(baseCostForCalc, totalPurchased, currentPoints);\n      return { cost: totalCost, quantity };\n    }\n    const cost = calculateTotalCostForQuantity(baseCostForCalc, totalPurchased, currentMultiplier);\n    return { cost, quantity: currentMultiplier };\n  }, [baseCostForCalc, totalPurchased, currentMultiplier, currentPoints]);\n\n  const canAfford = currentPoints >= displayCost && displayQuantity > 0;\n  const totalPpsFromThisType = upgrade.ppsPerUnit * totalPurchased;\n\n  const purchaseButtonText = () => {\n    if (currentMultiplier === \"MAX\") {\n      return `Buy Max (${displayQuantity.toLocaleString()})`;\n    }\n    if (currentMultiplier > 1) {\n      return `Buy x${currentMultiplier.toLocaleString()}`;\n    }\n    return \"Purchase\";\n  };\n\n  return (\n    <Card className=\"flex flex-col shadow-lg hover:shadow-xl transition-shadow duration-300 text-left\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <IconComponent size={36} className=\"text-primary\" />\n          <div>\n            <CardTitle className=\"text-lg\">{upgrade.name}</CardTitle>\n            <CardDescription className=\"text-xs\">{upgrade.description}</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-grow space-y-3 pt-0\">\n        <DetailItem icon={BadgeDollarSign} label={`Cost ${currentMultiplier === \"MAX\" ? `(x${displayQuantity.toLocaleString()})` : currentMultiplier > 1 ? `(x${currentMultiplier.toLocaleString()})` : ''}`} value={`${displayCost.toFixed(0)} Pts`} />\n        <DetailItem icon={Zap} label=\"PPS/Unit\" value={`${upgrade.ppsPerUnit.toFixed(1)}`} valueClass=\"text-accent\" />\n        <DetailItem icon={Layers} label=\"Quantity Owned\" value={totalPurchased} />\n        {totalPurchased > 0 && (\n          <DetailItem icon={TrendingUp} label=\"Total PPS (this type)\" value={`${totalPpsFromThisType.toFixed(1)}`} valueClass=\"text-accent\" />\n        )}\n      </CardContent>\n      <CardFooter>\n        <Button\n          onClick={() => purchaseUpgrade(upgrade.id, currentMultiplier)} // Use purchaseUpgrade from context\n          disabled={!canAfford}\n          className=\"w-full transition-transform duration-150 ease-in-out hover:scale-105 active:scale-95\"\n          aria-label={`Purchase ${upgrade.name}`}\n        >\n          <Coins className=\"mr-2 h-4 w-4\" /> \n          {purchaseButtonText()} {!canAfford && displayQuantity > 0 ? `(${(displayCost - currentPoints).toFixed(0)} more needed)` : \"\"}\n          {!canAfford && displayQuantity === 0 && currentMultiplier === \"MAX\" ? \" (Can't afford any)\" : \"\"}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n// Need to import AVAILABLE_ARTIFICES and AVAILABLE_PRESTIGE_UPGRADES for cost calculation\nimport { AVAILABLE_ARTIFICES } from \"@/config/artifices\";\nimport { AVAILABLE_PRESTIGE_UPGRADES } from \"@/config/prestige\";\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,sOAA0C,2CAA2C;AA+FrF,0FAA0F;AAC1F;AAxGA;;;;;;;;AAiBA,MAAM,aAAgH,CAAC,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,iBAC7J,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,WAAU;;;;;;0BAChB,8OAAC;;oBAAM;oBAAM;;;;;;;0BACb,8OAAC;gBAAK,WAAW,CAAC,sBAAsB,EAAE,cAAc,mBAAmB;0BAAG,OAAO,UAAU,WAAW,MAAM,cAAc,CAAC,WAAW;oBAAC,uBAAuB;oBAAG,uBAAuB,QAAQ,MAAM,IAAI,IAAI;gBAAC,KAAK;;;;;;;;;;;;AAIrN,SAAS,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,iBAAiB,EAAoB;IACzG,MAAM,EAAE,eAAe,EAAE,iBAAiB,EAAE,yBAAyB,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD,KAAK,mCAAmC;IACxH,MAAM,gBAAgB,QAAQ,IAAI;IAElC,IAAI,kBAAkB,QAAQ,QAAQ;IACpC,OAAO,MAAM,CAAC,mBAAmB,OAAO,CAAC,CAAA;QACrC,MAAM,cAAc,0HAAA,CAAA,sBAAmB,CAAC,IAAI,CAAC,CAAA,KAAM,GAAG,EAAE,KAAK,SAAS,UAAU;QAChF,IAAI,aAAa;YACb,IAAI,YAAY,MAAM,CAAC,IAAI,KAAK,gCAAgC;gBAC5D,mBAAmB,YAAY,MAAM,CAAC,KAAK;YAC/C;YACA,IAAI,YAAY,MAAM,CAAC,IAAI,KAAK,sCAAsC,YAAY,MAAM,CAAC,SAAS,KAAK,QAAQ,EAAE,EAAE;gBAC/G,mBAAmB,YAAY,MAAM,CAAC,KAAK;YAC/C;QACJ;IACJ;IACA,MAAM,kBAAkB,yBAAyB,CAAC,4BAA4B;IAC9E,IAAI,iBAAiB;QACjB,mBAAoB,IAAK,OAAO,gBAAgB,KAAK;IACzD;IAGF,MAAM,EAAE,MAAM,WAAW,EAAE,UAAU,eAAe,EAAE,GAAG,qMAAA,CAAA,UAAK,CAAC,OAAO,CAAC;QACrE,IAAI,sBAAsB,OAAO;YAC/B,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,yHAAA,CAAA,yBAAsB,AAAD,EAAE,iBAAiB,gBAAgB;YACxF,OAAO;gBAAE,MAAM;gBAAW;YAAS;QACrC;QACA,MAAM,OAAO,CAAA,GAAA,yHAAA,CAAA,gCAA6B,AAAD,EAAE,iBAAiB,gBAAgB;QAC5E,OAAO;YAAE;YAAM,UAAU;QAAkB;IAC7C,GAAG;QAAC;QAAiB;QAAgB;QAAmB;KAAc;IAEtE,MAAM,YAAY,iBAAiB,eAAe,kBAAkB;IACpE,MAAM,uBAAuB,QAAQ,UAAU,GAAG;IAElD,MAAM,qBAAqB;QACzB,IAAI,sBAAsB,OAAO;YAC/B,OAAO,CAAC,SAAS,EAAE,gBAAgB,cAAc,GAAG,CAAC,CAAC;QACxD;QACA,IAAI,oBAAoB,GAAG;YACzB,OAAO,CAAC,KAAK,EAAE,kBAAkB,cAAc,IAAI;QACrD;QACA,OAAO;IACT;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAc,MAAM;4BAAI,WAAU;;;;;;sCACnC,8OAAC;;8CACC,8OAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAW,QAAQ,IAAI;;;;;;8CAC5C,8OAAC,gIAAA,CAAA,kBAAe;oCAAC,WAAU;8CAAW,QAAQ,WAAW;;;;;;;;;;;;;;;;;;;;;;;0BAI/D,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBAAW,MAAM,gOAAA,CAAA,kBAAe;wBAAE,OAAO,CAAC,KAAK,EAAE,sBAAsB,QAAQ,CAAC,EAAE,EAAE,gBAAgB,cAAc,GAAG,CAAC,CAAC,GAAG,oBAAoB,IAAI,CAAC,EAAE,EAAE,kBAAkB,cAAc,GAAG,CAAC,CAAC,GAAG,IAAI;wBAAE,OAAO,GAAG,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC;;;;;;kCAC5O,8OAAC;wBAAW,MAAM,gMAAA,CAAA,MAAG;wBAAE,OAAM;wBAAW,OAAO,GAAG,QAAQ,UAAU,CAAC,OAAO,CAAC,IAAI;wBAAE,YAAW;;;;;;kCAC9F,8OAAC;wBAAW,MAAM,sMAAA,CAAA,SAAM;wBAAE,OAAM;wBAAiB,OAAO;;;;;;oBACvD,iBAAiB,mBAChB,8OAAC;wBAAW,MAAM,kNAAA,CAAA,aAAU;wBAAE,OAAM;wBAAwB,OAAO,GAAG,qBAAqB,OAAO,CAAC,IAAI;wBAAE,YAAW;;;;;;;;;;;;0BAGxH,8OAAC,gIAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBACL,SAAS,IAAM,gBAAgB,QAAQ,EAAE,EAAE;oBAC3C,UAAU,CAAC;oBACX,WAAU;oBACV,cAAY,CAAC,SAAS,EAAE,QAAQ,IAAI,EAAE;;sCAEtC,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAChB;wBAAqB;wBAAE,CAAC,aAAa,kBAAkB,IAAI,CAAC,CAAC,EAAE,CAAC,cAAc,aAAa,EAAE,OAAO,CAAC,GAAG,aAAa,CAAC,GAAG;wBACzH,CAAC,aAAa,oBAAoB,KAAK,sBAAsB,QAAQ,wBAAwB;;;;;;;;;;;;;;;;;;AAKxG","debugId":null}},
    {"offset": {"line": 2064, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/UpgradeStore.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { UpgradeCard } from \"./UpgradeCard\"; \nimport { useGame } from \"./GameProvider\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"./ui/card\";\nimport { AVAILABLE_UPGRADES } from \"@/config/upgrades\"; \nimport { Button } from \"./ui/button\";\nimport type { PurchaseMultiplier } from \"@/lib/types\";\n\nconst multiplierOptions: PurchaseMultiplier[] = [1, 5, 10, 25, 50, 100, 1000, 10000, 100000, 1000000, \"MAX\"];\n\nexport function UpgradeStore() {\n  const { \n    points, \n    gameInitialized, \n    purchasedUpgrades, \n    purchaseMultiplier, \n    setPurchaseMultiplier \n  } = useGame(); \n  \n  const upgrades = AVAILABLE_UPGRADES;\n\n  if (!gameInitialized) {\n    return (\n      <Card className=\"flex flex-col flex-grow\">\n        <CardHeader>\n          <CardTitle>Available Upgrades</CardTitle>\n        </CardHeader>\n        <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 flex-grow\">\n          {[...Array(3)].map((_, i) => (\n            <Card key={i} className=\"p-4 space-y-3\">\n              <div className=\"flex items-center space-x-3\">\n                <Skeleton className=\"h-9 w-9 rounded-full\" />\n                <div className=\"space-y-1\"><Skeleton className=\"h-5 w-32\" /><Skeleton className=\"h-3 w-48\" /></div>\n              </div>\n              <Skeleton className=\"h-4 w-24\" />\n              <Skeleton className=\"h-4 w-20\" />\n              <Skeleton className=\"h-10 w-full\" />\n            </Card>\n          ))}\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-lg flex flex-col flex-grow\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-semibold\">Purchase Upgrades</CardTitle>\n        <CardDescription>Invest your points to increase your passive Points Per Second (PPS).</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-grow overflow-y-auto\">\n        <div className=\"mb-4\">\n          <p className=\"text-sm font-medium mb-2\">Purchase Multiplier:</p>\n          <div className=\"flex flex-wrap gap-2\">\n            {multiplierOptions.map((multiplier) => (\n              <Button\n                key={multiplier}\n                variant={purchaseMultiplier === multiplier ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => setPurchaseMultiplier(multiplier)}\n              >\n                {typeof multiplier === 'number' && multiplier >= 1000 ? \n                  (multiplier >= 1000000 ? `${multiplier/1000000}M` : `${multiplier/1000}K`): \n                  multiplier}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {upgrades.length === 0 ? (\n          <p>No upgrades available at the moment.</p>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n            {upgrades.map(upg => {\n              const totalPurchasedForThisUpgrade = purchasedUpgrades[upg.id]?.quantity || 0;\n              return (\n                <UpgradeCard\n                  key={upg.id}\n                  upgrade={upg}\n                  currentPoints={points}\n                  totalPurchased={totalPurchasedForThisUpgrade}\n                  currentMultiplier={purchaseMultiplier}\n                />\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAUA,MAAM,oBAA0C;IAAC;IAAG;IAAG;IAAI;IAAI;IAAI;IAAK;IAAM;IAAO;IAAQ;IAAS;CAAM;AAErG,SAAS;IACd,MAAM,EACJ,MAAM,EACN,eAAe,EACf,iBAAiB,EACjB,kBAAkB,EAClB,qBAAqB,EACtB,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAEV,MAAM,WAAW,yHAAA,CAAA,qBAAkB;IAEnC,IAAI,CAAC,iBAAiB;QACpB,qBACE,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;8BACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;kCAAC;;;;;;;;;;;8BAEb,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;8BACpB;2BAAI,MAAM;qBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC,gIAAA,CAAA,OAAI;4BAAS,WAAU;;8CACtB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;4CAAI,WAAU;;8DAAY,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DAAa,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;;;;;;;8CAElF,8OAAC,oIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,8OAAC,oIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,8OAAC,oIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;2BAPX;;;;;;;;;;;;;;;;IAarB;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;kCAC9C,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA2B;;;;;;0CACxC,8OAAC;gCAAI,WAAU;0CACZ,kBAAkB,GAAG,CAAC,CAAC,2BACtB,8OAAC,kIAAA,CAAA,SAAM;wCAEL,SAAS,uBAAuB,aAAa,YAAY;wCACzD,MAAK;wCACL,SAAS,IAAM,sBAAsB;kDAEpC,OAAO,eAAe,YAAY,cAAc,OAC9C,cAAc,UAAU,GAAG,aAAW,QAAQ,CAAC,CAAC,GAAG,GAAG,aAAW,KAAK,CAAC,CAAC,GACzE;uCAPG;;;;;;;;;;;;;;;;oBAaZ,SAAS,MAAM,KAAK,kBACnB,8OAAC;kCAAE;;;;;6CAEH,8OAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAA;4BACZ,MAAM,+BAA+B,iBAAiB,CAAC,IAAI,EAAE,CAAC,EAAE,YAAY;4BAC5E,qBACE,8OAAC,iIAAA,CAAA,cAAW;gCAEV,SAAS;gCACT,eAAe;gCACf,gBAAgB;gCAChB,mBAAmB;+BAJd,IAAI,EAAE;;;;;wBAOjB;;;;;;;;;;;;;;;;;;AAMZ","debugId":null}},
    {"offset": {"line": 2308, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2376, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 2418, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/InventorySection.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useGame } from \"./GameProvider\";\nimport { AVAILABLE_ITEMS } from \"@/config/items\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { PackageSearch, Info, CheckCircle, Zap } from \"lucide-react\";\nimport type React from \"react\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport { Badge } from \"./ui/badge\";\nimport type { ActiveBuff, ItemDefinition } from \"@/lib/types\";\n\n\nconst ItemCard: React.FC<{ itemId: string; quantity: number; onUse: (itemId: string) => void; }> = ({ itemId, quantity, onUse }) => {\n  const itemDef = AVAILABLE_ITEMS.find(item => item.id === itemId);\n  if (!itemDef) return null;\n\n  const IconComponent = itemDef.icon;\n\n  return (\n    <Card className=\"flex flex-col shadow-md hover:shadow-lg transition-shadow duration-200\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center space-x-3\">\n          <IconComponent size={32} className=\"text-primary\" />\n          <div>\n            <CardTitle className=\"text-md\">{itemDef.name} <Badge variant=\"secondary\" className=\"ml-2\">x{quantity}</Badge></CardTitle>\n            <CardDescription className=\"text-xs\">{itemDef.description}</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n      <CardFooter>\n        <Button \n          onClick={() => onUse(itemId)} \n          disabled={quantity <= 0} \n          className=\"w-full\"\n          size=\"sm\"\n        >\n          <Zap className=\"mr-2 h-4 w-4\" /> Use Item\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst ActiveBuffDisplay: React.FC<{ buff: ActiveBuff }> = ({ buff }) => {\n  const itemDef = AVAILABLE_ITEMS.find(item => item.id === buff.itemId);\n  if (!itemDef) return null;\n\n  const Icon = itemDef.icon;\n  const timeLeft = Math.max(0, Math.round((buff.expiresAt - Date.now()) / 1000));\n  \n  let effectText = \"\";\n  if (itemDef.effect.type === \"PPS_MULTIPLIER\") {\n    effectText = `+${((buff.value - 1) * 100).toFixed(0)}% PPS`;\n  }\n\n  return (\n    <div className=\"flex items-center justify-between p-2 bg-accent/10 rounded-md border border-accent/30\">\n      <div className=\"flex items-center gap-2\">\n        <Icon className=\"h-5 w-5 text-accent\" />\n        <div>\n          <p className=\"text-sm font-medium text-accent-foreground\">{itemDef.name}</p>\n          <p className=\"text-xs text-muted-foreground\">{effectText}</p>\n        </div>\n      </div>\n      <Badge variant=\"outline\" className=\"text-accent-foreground border-accent/50\">{timeLeft}s left</Badge>\n    </div>\n  );\n};\n\nexport function InventorySection() {\n  const { inventory, useItem, gameInitialized, activeBuffs } = useGame();\n  const inventoryItemIds = Object.keys(inventory);\n\n  if (!gameInitialized) {\n    return (\n      <Card className=\"flex flex-col flex-grow\">\n        <CardHeader>\n          <Skeleton className=\"h-6 w-1/3\" />\n          <Skeleton className=\"h-4 w-2/3\" />\n        </CardHeader>\n        <CardContent className=\"space-y-4 flex-grow\">\n           <Skeleton className=\"h-5 w-1/4 mb-2\" />\n          {[...Array(2)].map((_, i) => (\n            <Card key={i} className=\"p-3 space-y-2\">\n              <div className=\"flex items-center space-x-2\">\n                <Skeleton className=\"h-8 w-8 rounded-md\" />\n                <div className=\"flex-grow space-y-1\">\n                  <Skeleton className=\"h-4 w-1/2\" />\n                  <Skeleton className=\"h-3 w-3/4\" />\n                </div>\n              </div>\n              <Skeleton className=\"h-8 w-full\" />\n            </Card>\n          ))}\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <div className=\"space-y-6 flex flex-col flex-grow\">\n      <Card className=\"shadow-lg flex flex-col flex-grow\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-semibold flex items-center\">\n            <PackageSearch className=\"mr-3 h-6 w-6\" /> My Inventory\n          </CardTitle>\n          <CardDescription>Items you've collected. Use them wisely!</CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex-grow\">\n          {inventoryItemIds.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Info className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <p className=\"mt-4 text-muted-foreground\">Your inventory is empty.</p>\n              <p className=\"text-sm text-muted-foreground\">Items will randomly drop as you play or click.</p>\n            </div>\n          ) : (\n            <ScrollArea className=\"h-full pr-3\"> {/* Changed from h-[280px] */}\n              <div className=\"space-y-4\">\n                {inventoryItemIds.map(id => (\n                  <ItemCard \n                    key={id} \n                    itemId={id} \n                    quantity={inventory[id].quantity} \n                    onUse={useItem}\n                  />\n                ))}\n              </div>\n            </ScrollArea>\n          )}\n        </CardContent>\n      </Card>\n\n      {activeBuffs.length > 0 && (\n        <Card className=\"shadow-lg mt-4 shrink-0\"> {/* Added shrink-0 to prevent this card from growing excessively */}\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold flex items-center\">\n              <CheckCircle className=\"mr-3 h-5 w-5 text-accent\" /> Active Effects\n            </CardTitle>\n            <CardDescription>Temporary boosts currently affecting your game.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {activeBuffs.map(buff => (\n              <ActiveBuffDisplay key={buff.itemId + buff.effectType + buff.expiresAt} buff={buff} />\n            ))}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2903, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ArtificeSection.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useGame } from \"./GameProvider\";\nimport { AVAILABLE_ARTIFICES } from \"@/config/artifices\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Sparkles, Info } from \"lucide-react\";\nimport type React from \"react\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport type { ArtificeDefinition } from \"@/lib/types\";\n\nconst ArtificeDisplayCard: React.FC<{ artificeDef: ArtificeDefinition }> = ({ artificeDef }) => {\n  const IconComponent = artificeDef.icon;\n\n  return (\n    <Card className=\"shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start space-x-3\">\n          <IconComponent size={32} className=\"text-primary mt-1\" />\n          <div>\n            <CardTitle className=\"text-md\">{artificeDef.name}</CardTitle>\n            <CardDescription className=\"text-xs mt-1\">{artificeDef.description}</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm font-semibold text-accent\">{artificeDef.effectDescription}</p>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport function ArtificeSection() {\n  const { acquiredArtifices, gameInitialized } = useGame();\n  const artificeIds = Object.keys(acquiredArtifices);\n\n  if (!gameInitialized) {\n    return (\n      <Card className=\"flex flex-col flex-grow\">\n        <CardHeader>\n          <Skeleton className=\"h-6 w-2/5\" />\n          <Skeleton className=\"h-4 w-3/5\" />\n        </CardHeader>\n        <CardContent className=\"space-y-3 flex-grow\">\n          {[...Array(1)].map((_, i) => (\n            <Card key={i} className=\"p-3 space-y-2\">\n              <div className=\"flex items-start space-x-2\">\n                <Skeleton className=\"h-8 w-8 rounded-md mt-1\" />\n                <div className=\"flex-grow space-y-1\">\n                  <Skeleton className=\"h-4 w-1/2\" />\n                  <Skeleton className=\"h-3 w-3/4\" />\n                </div>\n              </div>\n              <Skeleton className=\"h-4 w-full\" />\n            </Card>\n          ))}\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className=\"shadow-lg flex flex-col flex-grow\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-semibold flex items-center\">\n          <Sparkles className=\"mr-3 h-6 w-6 text-amber-500\" /> Acquired Artifices\n        </CardTitle>\n        <CardDescription>Ancient relics granting permanent boosts to your game.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-grow\">\n        {artificeIds.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Info className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n            <p className=\"mt-4 text-muted-foreground\">No Artifices acquired yet.</p>\n            <p className=\"text-sm text-muted-foreground\">These rare items may drop randomly as you play or click.</p>\n          </div>\n        ) : (\n          <ScrollArea className=\"h-full pr-3\"> {/* Changed from h-[200px] */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {artificeIds.map(id => {\n                const artificeDef = AVAILABLE_ARTIFICES.find(a => a.id === id);\n                return artificeDef ? <ArtificeDisplayCard key={id} artificeDef={artificeDef} /> : null;\n              })}\n            </div>\n          </ScrollArea>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\n    "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AARA;;;;;;;;AAWA,MAAM,sBAAqE,CAAC,EAAE,WAAW,EAAE;IACzF,MAAM,gBAAgB,YAAY,IAAI;IAEtC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAc,MAAM;4BAAI,WAAU;;;;;;sCACnC,8OAAC;;8CACC,8OAAC,gIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAW,YAAY,IAAI;;;;;;8CAChD,8OAAC,gIAAA,CAAA,kBAAe;oCAAC,WAAU;8CAAgB,YAAY,WAAW;;;;;;;;;;;;;;;;;;;;;;;0BAIxE,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAE,WAAU;8BAAqC,YAAY,iBAAiB;;;;;;;;;;;;;;;;;AAIvF;AAEO,SAAS;IACd,MAAM,EAAE,iBAAiB,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IACrD,MAAM,cAAc,OAAO,IAAI,CAAC;IAEhC,IAAI,CAAC,iBAAiB;QACpB,qBACE,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;8BAEtB,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;8BACpB;2BAAI,MAAM;qBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC,gIAAA,CAAA,OAAI;4BAAS,WAAU;;8CACtB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;;;;;;;8CAGxB,8OAAC,oIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;2BARX;;;;;;;;;;;;;;;;IAcrB;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACnB,8OAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAgC;;;;;;;kCAEtD,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;0BACpB,YAAY,MAAM,KAAK,kBACtB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAC1C,8OAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;yCAG/C,8OAAC,0IAAA,CAAA,aAAU;oBAAC,WAAU;;wBAAc;sCAClC,8OAAC;4BAAI,WAAU;sCACZ,YAAY,GAAG,CAAC,CAAA;gCACf,MAAM,cAAc,0HAAA,CAAA,sBAAmB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;gCAC3D,OAAO,4BAAc,8OAAC;oCAA6B,aAAa;mCAAjB;;;;2CAAmC;4BACpF;;;;;;;;;;;;;;;;;;;;;;;AAOd","debugId":null}},
    {"offset": {"line": 3209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3245, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/AchievementsSection.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useGame } from \"./GameProvider\";\nimport { AVAILABLE_ACHIEVEMENTS } from \"@/config/achievements\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Award, CheckCircle, Lock } from \"lucide-react\";\nimport type React from \"react\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport { Badge } from \"./ui/badge\";\nimport type { AchievementDefinition } from \"@/lib/types\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\n\nconst AchievementCard: React.FC<{ achievement: AchievementDefinition; isUnlocked: boolean; acquiredAt?: number }> = ({ achievement, isUnlocked, acquiredAt }) => {\n  const IconComponent = achievement.icon;\n  const dateUnlocked = acquiredAt ? new Date(acquiredAt).toLocaleDateString() : \"\";\n\n  let rewardText = \"\";\n  if (achievement.reward.type === \"POINTS\") {\n    rewardText = `+${achievement.reward.value.toLocaleString()} Points`;\n  } else if (achievement.reward.type === \"ITEM\") {\n    rewardText = `Item: ${achievement.reward.itemId} (x${achievement.reward.quantity})`;\n  }\n  \n  return (\n    <TooltipProvider>\n      <Tooltip delayDuration={300}>\n        <TooltipTrigger asChild>\n          <Card className={`shadow-sm transition-all duration-300 ${isUnlocked ? \"border-accent/50 bg-accent/5\" : \"opacity-70 hover:opacity-100\"}`}>\n            <CardHeader className=\"pb-2 pt-3 px-4\">\n              <div className=\"flex items-start space-x-3\">\n                <IconComponent size={28} className={`mt-1 ${isUnlocked ? \"text-accent\" : \"text-muted-foreground\"}`} />\n                <div>\n                  <CardTitle className={`text-md ${isUnlocked ? \"text-accent-foreground\" : \"\"}`}>{achievement.name}</CardTitle>\n                  <CardDescription className=\"text-xs mt-0.5\">{achievement.description}</CardDescription>\n                </div>\n                {isUnlocked ? (\n                  <CheckCircle size={20} className=\"text-green-500 ml-auto shrink-0\" />\n                ) : (\n                  <Lock size={20} className=\"text-muted-foreground ml-auto shrink-0\" />\n                )}\n              </div>\n            </CardHeader>\n            {isUnlocked && (\n               <CardContent className=\"pb-3 px-4\">\n                 <Badge variant=\"outline\" className=\"text-xs\">Unlocked: {dateUnlocked}</Badge>\n               </CardContent>\n            )}\n          </Card>\n        </TooltipTrigger>\n        {!isUnlocked && (\n          <TooltipContent side=\"top\" align=\"center\">\n            <p className=\"text-sm font-semibold\">Reward: {rewardText}</p>\n          </TooltipContent>\n        )}\n      </Tooltip>\n    </TooltipProvider>\n  );\n};\n\nexport function AchievementsSection() {\n  const { acquiredAchievements, gameInitialized } = useGame();\n\n  if (!gameInitialized) {\n    return (\n      <Card className=\"shadow-lg flex flex-col flex-grow\">\n        <CardHeader>\n          <Skeleton className=\"h-7 w-2/5 mb-1\" />\n          <Skeleton className=\"h-4 w-3/5\" />\n        </CardHeader>\n        <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 flex-grow\">\n          {[...Array(3)].map((_, i) => (\n            <Card key={i} className=\"p-3 space-y-2\">\n              <div className=\"flex items-start space-x-2\">\n                <Skeleton className=\"h-7 w-7 rounded-md mt-1\" />\n                <div className=\"flex-grow space-y-1\">\n                  <Skeleton className=\"h-5 w-3/4\" />\n                  <Skeleton className=\"h-3 w-full\" />\n                </div>\n                <Skeleton className=\"h-5 w-5 rounded-full ml-auto\" />\n              </div>\n            </Card>\n          ))}\n        </CardContent>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className=\"shadow-lg flex flex-col flex-grow\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-semibold flex items-center\">\n          <Award className=\"mr-3 h-6 w-6 text-amber-400\" /> Achievements\n        </CardTitle>\n        <CardDescription>Milestones and rewards for your clicking journey.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-grow\">\n        {AVAILABLE_ACHIEVEMENTS.length === 0 ? (\n          <p className=\"text-muted-foreground text-center py-4\">No achievements defined yet.</p>\n        ) : (\n          <ScrollArea className=\"h-full pr-3 -mr-3\"> {/* Changed from h-[250px] */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n              {AVAILABLE_ACHIEVEMENTS.map(achDef => {\n                const isUnlocked = !!acquiredAchievements[achDef.id];\n                const acquiredAt = acquiredAchievements[achDef.id]?.acquiredAt;\n                return (\n                  <AchievementCard \n                    key={achDef.id} \n                    achievement={achDef} \n                    isUnlocked={isUnlocked}\n                    acquiredAt={acquiredAt}\n                  />\n                );\n              })}\n            </div>\n          </ScrollArea>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3600, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/PrestigeSection.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useGame } from \"./GameProvider\";\nimport { AVAILABLE_PRESTIGE_UPGRADES } from \"@/config/prestige\";\nimport { PRESTIGE_POINTS_REQUIREMENT, LEGACY_TOKEN_FORMULA, PRESTIGE_REQUIREMENT_INCREASE_FACTOR } from \"@/config/gameConfig\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Gem, Zap, TrendingUp, Award, Shield, Star, ZapIcon } from \"lucide-react\";\nimport type React from \"react\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport { Badge } from \"./ui/badge\";\nimport type { PrestigeUpgradeDefinition } from \"@/lib/types\";\n\nconst PrestigeUpgradeCard: React.FC<{\n  upgradeDef: PrestigeUpgradeDefinition;\n  onPurchase: (id: string) => void;\n  currentLegacyTokens: number;\n  currentLevel: number;\n}> = ({ upgradeDef, onPurchase, currentLegacyTokens, currentLevel }) => {\n  const IconComponent = upgradeDef.icon;\n  const cost = upgradeDef.cost; // For now, let's assume cost doesn't scale with level here\n  const canAfford = currentLegacyTokens >= cost;\n  const isMaxLevel = upgradeDef.maxLevel && currentLevel >= upgradeDef.maxLevel;\n\n  let effectDescription = upgradeDef.description;\n  if(upgradeDef.effect.type === \"GLOBAL_PPS_BOOST_PRESTIGE\" || upgradeDef.effect.type === \"GLOBAL_PPC_BOOST_PRESTIGE\"){\n    effectDescription = upgradeDef.description.replace(/\\d+(\\.\\d+)?%/, `${(upgradeDef.effect.value * (currentLevel +1) * 100).toFixed(0)}%`);\n  } else if (upgradeDef.id === \"prestige_cheaper_upgrades\") {\n    effectDescription = upgradeDef.description.replace(/\\d+(\\.\\d+)?%/, `${(2 * (currentLevel +1)).toFixed(0)}%`);\n  }\n\n\n  return (\n    <Card className=\"flex flex-col shadow-md hover:shadow-lg transition-shadow duration-200\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center space-x-3\">\n          <IconComponent size={32} className=\"text-purple-500\" />\n          <div>\n            <CardTitle className=\"text-md\">{upgradeDef.name} {upgradeDef.maxLevel ? `(Lvl ${currentLevel}/${upgradeDef.maxLevel})` : ''}</CardTitle>\n            <CardDescription className=\"text-xs mt-1\">{effectDescription}</CardDescription>\n          </div>\n        </div>\n      </CardHeader>\n       <CardContent className=\"flex-grow space-y-2 pt-0\">\n         <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Gem className=\"mr-2 h-4 w-4 text-purple-400\" />\n            <span>Cost:</span>\n            <span className={`ml-auto font-semibold text-purple-600`}>{cost} LT</span>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button\n          onClick={() => onPurchase(upgradeDef.id)}\n          disabled={!canAfford || isMaxLevel}\n          className=\"w-full bg-purple-600 hover:bg-purple-700 text-white\"\n          size=\"sm\"\n        >\n          {isMaxLevel ? \"Max Level\" : (canAfford ? <><ZapIcon className=\"mr-2 h-4 w-4\" /> Enhance</> : `Need ${cost - currentLegacyTokens} LT`)}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\n\nexport function PrestigeSection() {\n  const { \n    points, \n    legacyTokens, \n    purchasedPrestigeUpgrades, \n    prestigeGame, \n    purchasePrestigeUpgrade, \n    gameInitialized,\n    currentPrestigeRequirement,\n    prestigeCount\n  } = useGame();\n\n  const potentialLgGain = LEGACY_TOKEN_FORMULA(points);\n\n  if (!gameInitialized) {\n    return (\n      <Card className=\"shadow-lg flex flex-col flex-grow\">\n        <CardHeader>\n          <Skeleton className=\"h-7 w-1/2 mb-1\" />\n          <Skeleton className=\"h-4 w-3/4\" />\n        </CardHeader>\n        <CardContent className=\"space-y-4 flex-grow\">\n          <Skeleton className=\"h-10 w-1/2 mx-auto\" />\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {[...Array(2)].map((_, i) => (\n              <Card key={i} className=\"p-3 space-y-2\">\n                <div className=\"flex items-start space-x-2\">\n                  <Skeleton className=\"h-8 w-8 rounded-md\" />\n                  <div className=\"flex-grow space-y-1\">\n                    <Skeleton className=\"h-4 w-3/4\" />\n                    <Skeleton className=\"h-3 w-full\" />\n                  </div>\n                </div>\n                <Skeleton className=\"h-4 w-1/3\" />\n                <Skeleton className=\"h-8 w-full\" />\n              </Card>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-lg flex flex-col flex-grow\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-semibold flex items-center\">\n          <Star className=\"mr-3 h-6 w-6 text-yellow-400\" /> Prestige System\n        </CardTitle>\n        <CardDescription>\n          Reset your progress to gain Legacy Tokens (LT) and unlock powerful permanent upgrades. \n          Current prestige count: {prestigeCount}. Next prestige at: {currentPrestigeRequirement.toLocaleString()} points.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6 flex-grow\">\n        <Card className=\"bg-muted/50 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-muted-foreground\">Legacy Tokens on next prestige:</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{potentialLgGain.toLocaleString()} LT</p>\n            </div>\n            <Button \n              onClick={prestigeGame} \n              disabled={points < currentPrestigeRequirement}\n              variant=\"destructive\" \n              size=\"lg\"\n              className=\"bg-gradient-to-r from-yellow-400 via-red-500 to-pink-500 text-white hover:opacity-90\"\n            >\n              <Star className=\"mr-2 h-5 w-5\" /> Prestige Now\n            </Button>\n          </div>\n           {points < currentPrestigeRequirement && (\n            <p className=\"text-xs text-destructive mt-1\">\n              Need {(currentPrestigeRequirement - points).toLocaleString()} more points to prestige.\n            </p>\n          )}\n        </Card>\n\n        <div>\n          <h3 className=\"text-xl font-semibold mb-3 flex items-center\">\n            <Shield className=\"mr-2 h-5 w-5 text-purple-500\" /> Prestige Upgrades\n          </h3>\n          {AVAILABLE_PRESTIGE_UPGRADES.length === 0 ? (\n            <p className=\"text-muted-foreground text-center py-4\">No prestige upgrades available yet.</p>\n          ) : (\n            <ScrollArea className=\"h-[calc(50vh-180px)] pr-3\"> {/* Adjust height as needed */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {AVAILABLE_PRESTIGE_UPGRADES.map(upg => (\n                  <PrestigeUpgradeCard\n                    key={upg.id}\n                    upgradeDef={upg}\n                    onPurchase={purchasePrestigeUpgrade}\n                    currentLegacyTokens={legacyTokens}\n                    currentLevel={purchasedPrestigeUpgrades[upg.id]?.level || 0}\n                  />\n                ))}\n              </div>\n            </ScrollArea>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4090, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4143, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { GameProvider, useGame } from \"@/components/GameProvider\";\nimport { Dashboard } from \"@/components/Dashboard\";\nimport { UpgradeStore } from \"@/components/UpgradeStore\";\nimport { InventorySection } from \"@/components/InventorySection\";\nimport { ArtificeSection } from \"@/components/ArtificeSection\";\nimport { AchievementsSection } from \"@/components/AchievementsSection\";\nimport { PrestigeSection } from \"@/components/PrestigeSection\"; // Added\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { RefreshCw, Pointer } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nfunction GameUI() {\n  const { resetGame, gameInitialized, clickMasterButton } = useGame();\n\n  if (!gameInitialized) {\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gradient-to-br from-background to-secondary\">\n            <div className=\"animate-pulse text-primary text-2xl font-semibold\">Loading Clicker Game...</div>\n        </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-secondary p-4 md:p-8 flex flex-col\">\n      <header className=\"mb-8 text-center\">\n        <div className=\"flex items-center justify-center mb-2\">\n         <Image src=\"/logo.svg\" alt=\"Game Logo\" width={60} height={60} data-ai-hint=\"game logo\" className=\"mr-3\" />\n          <h1 className=\"text-5xl font-bold text-primary tracking-tight\">\n            Point Clicker Pro\n          </h1>\n        </div>\n        <p className=\"text-lg text-muted-foreground\">Click your way to victory!</p>\n      </header>\n      \n      <main className=\"space-y-8 max-w-7xl mx-auto w-full flex flex-col flex-grow\">\n        <Dashboard />\n\n        <Card className=\"shadow-xl border-primary/50\">\n            <CardContent className=\"p-6 flex flex-col items-center justify-center\">\n                <Button \n                    onClick={clickMasterButton} \n                    size=\"lg\" \n                    className=\"px-10 py-8 text-2xl font-bold bg-gradient-to-r from-primary to-accent text-primary-foreground hover:from-primary/90 hover:to-accent/90 transition-all duration-150 ease-in-out transform hover:scale-105 active:scale-95 shadow-lg rounded-xl\"\n                    aria-label=\"Click to earn points\"\n                >\n                    <Pointer className=\"mr-3 h-8 w-8 animate-pulse\" /> Click for Points!\n                </Button>\n            </CardContent>\n        </Card>\n        \n        <Tabs defaultValue=\"upgrades\" className=\"w-full mt-8 flex flex-col flex-grow\">\n          <TabsList className=\"grid w-full grid-cols-2 md:grid-cols-5\"> {/* Adjusted for 5 tabs */}\n            <TabsTrigger value=\"upgrades\">Upgrades</TabsTrigger>\n            <TabsTrigger value=\"inventory\">Inventory</TabsTrigger>\n            <TabsTrigger value=\"artifices\">Artifices</TabsTrigger>\n            <TabsTrigger value=\"achievements\">Achievements</TabsTrigger>\n            <TabsTrigger value=\"prestige\">Prestige</TabsTrigger> {/* Added Prestige Tab */}\n          </TabsList>\n          <TabsContent value=\"upgrades\" className=\"flex flex-col mt-2\">\n            <div className=\"min-h-[50vh] flex flex-col flex-grow\">\n              <UpgradeStore />\n            </div>\n          </TabsContent>\n          <TabsContent value=\"inventory\" className=\"flex flex-col mt-2\">\n             <div className=\"min-h-[50vh] flex flex-col flex-grow\">\n              <InventorySection />\n            </div>\n          </TabsContent>\n          <TabsContent value=\"artifices\" className=\"flex flex-col mt-2\">\n            <div className=\"min-h-[50vh] flex flex-col flex-grow\">\n              <ArtificeSection />\n            </div>\n          </TabsContent>\n          <TabsContent value=\"achievements\" className=\"flex flex-col mt-2\">\n             <div className=\"min-h-[50vh] flex flex-col flex-grow\">\n              <AchievementsSection />\n            </div>\n          </TabsContent>\n          <TabsContent value=\"prestige\" className=\"flex flex-col mt-2\"> {/* Added Prestige Content */}\n             <div className=\"min-h-[50vh] flex flex-col flex-grow\">\n              <PrestigeSection />\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        <div className=\"flex justify-center mt-auto pt-8\"> \n            <Button onClick={resetGame} variant=\"outline\" size=\"lg\">\n              <RefreshCw className=\"mr-2 h-5 w-5\" /> Reset Game\n            </Button>\n        </div>\n        \n      </main>\n      <footer className=\"mt-12 text-center text-sm text-muted-foreground shrink-0\">\n        <p>&copy; {new Date().getFullYear()} Clicker Game Studios. All rights reserved.</p>\n        <p className=\"text-xs\">Game data is saved locally in your browser.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default function Home() {\n  return (\n    <GameProvider>\n      <GameUI />\n    </GameProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}